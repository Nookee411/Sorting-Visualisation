{"version":3,"sources":["../node_modules/regenerator-runtime/runtime.js","../node_modules/moment/moment.js","app/model/SortingAlgorithms/BubbleSorter.js","app/model/SortingAlgorithms/InsertionSorter.js","app/model/core/constants/sortingState.js","app/model/SortingAlgorithms/SelectionSorter.js","app/model/core/constants/sortEvent.js","app/model/SortingAlgorithms/MergeSorter.js","app/model/SortingAlgorithms/QuickSorter.js","app/model/SortingAlgorithms/HeapSorter.js","app/model/SortingAlgorithms/SorterFactory.js","app/model/core/Sorter.js","app/model/core/SortManager.js","app/view/timer.js","app/view/Visualizer.js","app/index.js"],"names":["BubbleSorter","sortArray","context","array","getArray","i","length","j","compareAndDispatch","swapAndDispatch","InsertionSorter","console","log","indexOfEle","sortingState","sorting","stopped","SelectionSorter","findMaxValue","call","res","startIndex","maxIndex","sortEvent","ItemSwapped","SortingFinished","ItemScanned","MergeSorter","mergeSort","mergeArrays","leftArr","rightArr","mergedArray","sleepDuration","then","push","dispatch","indexOne","indexTwo","concat","slice","resolve","state","splittedArray","middle","Math","floor","QuickSorter","partition","quickSort","swap","leftIndex","rightIndex","temp","left","right","index","pivot","HeapSorter","heapSort","makeMaxHeap","applyHeapSort","pushToMaxArray","leftChildIndex","rightChildInex","maxChildIndex","undefined","heapContainer","pop","SorterFactory","applySort","currentSortName","sorter","sortResult","config","ComparisonTime","SwapTime","SortManager","n","sortName","getRandomValue","min","max","round","random","initArray","size","Array","events","protectedMethods","sortState","setCurrentSort","remakeArray","newSize","Object","defineProperty","get","set","value","addEventListener","eventName","callback","removeEventListener","params","stopSorting","assign","ctx","durationTime","Promise","setTimeout","firstIndex","secondIndex","TimerEvents","tick","Timer","interval","tickRate","elapsedTime","start","defineInterval","setInterval","stop","clearInterval","colors","unsorted","sorted","swapped","scanned","elementIDs","COLUMN_CONTAINER","TIMER_VALUE","SWAP_VALUE","COMPARATIONS_VALUE","SORT_LIST","ACTIVE_SORT_ALGO","NEW_ARRAY_BUTTON","ARRAY_SIZE_SLIDER","START_SORT_BUTTON","Visualizer","columnContainer","document","getElementById","timerValue","swapValue","compValue","columns","columnWidth","shifts","comp","sortList","currentSort","newArrayButton","slider","sortButton","timer","innerText","resetStats","increaseSwapCounter","toString","updateComparisons","updateVisual","indexOfHighlightedElement","color","defineColumnNumber","defineColumnWidth","setColumnStyle","style","backgroundColor","childNodes","arrayLength","offsetWidth","columnIndex","currentColor","height","createVisual","innerHTML","column","createColumnFromValue","appendChild","createElement","width","marginLeft","borderRadius","display","justifyContent","alignItems","vis","currentSize","sort","e","newArray","children","child","className","target","id"],"mappings":";AAAA;ACAA,ADCA,AeDA;AdCA,ADCA;ACAA,ADCA,AeFA;AdEA,ADCA;ACAA,ADCA,AeHA,ATFO,AFAA,IEAMuB,AFAAT,SEAS,GAAG,AFAA,GAAG;AHK5B,ADCA,ASNA,AFAA,ACAA,AEAA,AEAA,ADAA,ALCEU,AFAAT,ASDK,EPCLS,AFAAT,ESDWiG,KTCJ,EAAE,EEAE,EAAE,AODS,GAAG,ETAC,SEAH;ALMzB,ADCA,AeJA,ATDEvF,AFAAT,AUFF,ADCEiG,EPCAxF,AFAAT,ASDAiG,IAAI,EAAE,CTCC,EAAE,MEAM,EAAE,kBAFM;ALOzB,ADCA,ASPA,AFAA,ACAA,AEAA,AEAA,ANEEvF,AFH0B,ASAD,CTApB,ASAA,CPGLA,WAAW,EAAE;ALKf,ADCA,AeLA,ATJyB,AQElB,CRFA,GQEMiG,MAAM,GAAG;AbOtB,ADCA,AEVO,ACAA,AEAA,AKEP,AEAA,AECEC,EAAAA,OZHc5H,ACAAU,AEAAO,CSGN,EAAE,SZHL,EYEe,CZFS,ACAxB,AEAA,GFA2B,AEAA;AJUlC,ADCA,AEVE,ACAA,AEAA,ASGA4G,ADAK,ECALA,ITHI1H,CHACF,ACAAA,CWGC,CDAQiH,CCAN,CTHR,GQGK,EXHL,ACAA,CWCoB,ADEE,uEVHL;AFUnB,ADCA,AEXE,ACAiB,AECjB,AKCF,AEAA,ADDO,AGGLY,ADAA,ECAAA,IDAIX,CRHClH,EMASD,AGGP,EAAE,GDAT,ERHA,KMAK,AGAe,GHAS,+CTDZ,iBAAgBE,AGChB,OHDA;ADWnB,ADCA,AEZmB,ACAA,AECA,AMCjB,AGGA6H,ADAA,ECAAA,IDAMX,CFHDnH,EGGE,EAAE,GDAK,EFHd,CEGiB,OAAO,EAAxB,8DFHiB;AVUnB,ADCA,AEbmB,ACAA,AIEZ,ACAA,AHDY,AKEnB,AEAA,ADDmB,AGDG,ADKpB,CCLK,KDKDoH,GNJU1F,ACAAoB,QKId,GNJK,ACAA,CDAqB7C,ACAAA,ODArB,ACAA,EDA8B,ACAA;APWrC,ADCA,AEdmB,ACAA,AIGjB,ACAA,AHFiB,AMCA,AEKjB,MNJIC,ACAAA,AKIAqF,KNJJ,ACAA,CKIU,GAAG,EAAb;AZOF,ADCA,AEfmB,ACAA,AIIjB,ACCA,AHJiB,AKGnB,ACFmB,AGMnB,IAAMwC,GPJC/H,ACCAA,OMGS,EPJd,ACCA,CMGiB,uEPJA,ACCA;APUnB,ADCA,AeXA,AbLmB,ACCfU,AIGe,ACCA,AHJA,AMCA,AGOjBsH,ADAA,ECAAA,ECJEyD,GAAG,AFIApE,CNDY1F,ACCAoB,EOJT,EZJNrC,AUQF,EEJY+H,CFIC,ENLI,ACCA,CMID,CXRP,CAAC9H,AWQQ,GXRhB,CAAY,GAAZ,AUQuB,INaRiB,ACwBAoB,CMtCA,ICHT,EAAV,EPAmB,EDDA,YC0DNC,IAzDM;APWnB,ADCA,AeXA,AbLQ/C,ACCAA,AEAJA,AKGJ,ACHmB,AGQjB+H,ADAEb,ECAFa,ECJEyD,AFIAtE,QVRIlH,AEAJA,CSQS,CZTLA,CaKO,ADIA,ADAA,EVVI,AEEV,CUISuL,AFIA,CXVC,AWUf,CVRY,AEAJ,CUIS,CAAClC,AbLNtJ,GCCKE,AEAJA,ESME,CCFD,CAAW8F,AbLN,CAAC9F,GCCR,AEAJ,CUIZ,CZNmB,AEEf,EFCA,CDFY,EADG;ADiBnB,ADCA,AeXA,AbLaC,AKEM,ACCA,AHFNA,AMALF,AGQNgI,ADAEZ,ECAFY,ECJEyD,AFIArE,IEJI,GAAG,CVJElH,AMALF,AGQI,CTVO,CHCNE,AYSC,CCJCwE,AbPI,CGGF,CAFE,AMCA,CTAF,AWSC,CXXC,CSGH,KAAKzE,EGKF,MHLH,EADG,IIKR,CAAgBuL,WAAhB,EAA6B,QAA7B,CAAX;AdWA,ADCA,AeXAD,AZHarL,AIDM,ACCA,AECnB,ACFaA,AGQX+H,ADAC,ECADA,CCJC,AFCD,CEDE0C,QZHSzK,AQDAA,CRJM,AQEA,GIMnB,AZHiB,AQDA,CIIAuL,AZRE,AQEA,GGUC,CCJC,CAACxL,ADIA,QCJL,EAAjB,QDAmB;AbWnB,ADCA,AeVAwL,AbVmB,AKIA,ACCA,AHJA,ASYjBvD,EAAAA,ECHE,CAAClC,MDGM,EAAE,QCHb,CAAsB5E,CDFH,oBCEaC,WAAhC,EAA6C,UAAC+E,MAAD,EAAY;AdUzD,ADCA,AeVEmF,AbXiB,ACAA,AIIA,ACCA,AHJA,AMCA,AGYjBpD,ADAA,EEHAoD,ADGApD,GCHG,CAAC0B,AFGAzC,YEHJ,AVRkBlH,ASWF,CCFduL,AVTiB,CHDDvL,AYYA,ADAA,CXZC,CGCGF,CUShB,AFEe,CEFdC,AbVeD,GGCK,CAACG,ASKX,CZNU,CAACA,EaU1B,AFEEiH,EEHJ,AVViB,EUYf,Abbe,UWcI,GAAY;AZOnC,ADCA,AeTMlF,Abba,ACAA,AIIA,AC0DNa,AH7DM,AMCA,AGajBqF,ADAEpB,ECAFoB,ECFIlG,AFEF8E,QEFU,APiDDjE,AK/CD,EEFIqD,CFEDiB,CLVI,ELACnH,AQDAA,AGWF,CXVG,AQDA,CISC,ADEF,CCFGgC,CZRClC,AQDAA,IEWE,CVVG,AQDA,AEWF,CVVGG,AQDAA,CIS1B,CDLe,IXRA,AK8DD6C,AG5DC,KEac,ILVd,EAyDUC,UAzDV,EAyDsB;APxCzC,ADCA,AeViCd,Abbd,ACAA,AIIA,AC2Db,AH9Da,AMCA,AGcjBkG,ADAIpG,ECAJoG,ECH+BlG,EFG3BF,MEHmC,EAAEmE,AFG7B,CAACS,GL+CL3D,CM/CS,CCH8B,CAACf,ADG7B,CN+CP,GAAGnC,CK/CS,CAAC8G,ECRR,CNuDG,CAAC9D,AK/CT,EAAmB,OL+CX,CAAhB,4CDzCF,kBAA2BrB,OAA3B,EAAoCC,QAApC,EAA8CV,UAA9C;ANCJ,ADCA,AeXI,Abbe,ACAA,AIsBf,AC0CElB,AH/Da,AMCA,AGejBsI,ADAMpB,ECANoB,CCNA,EAGEd,GFGIN,ML+CFlH,KAAK,AM/CQ,ADAA,CL+CPgD,CM/CS,ADACkE,GEHXS,KPkDA,CAAL,COrDJ,CFM+B,CL+CR3H,GK/CYiH,EL+CP,CAAChE,UAAD,CAAxB;APxCN,ADCA,AeTEsI,ANdK,ANFY,AKiEbvL,AEzDC,ACNY,AGMA,ADQc,CCRjC,CCQEuL,GAAG,CAAC7B,CFAQ,CAAR,CJdUnG,ACMAW,KFyDVlE,KC/DC,AD+DI,CC/DgBD,AD+DfkD,EEzDL,CAAuBlD,EKQ5B,ENdK,EAA6B,CD+DzB,AEzDJ,CFyDD,CEzDiC,EFyDbmD,IAApB;APxCN,ADCA,AeTC,Abdc9C,AOAb,AFmBE,AC4CC,AHjEc,AKQjB,AGUG,CETL,IFK0B,CJZpBJ,CCMCmE,AGUA8C,IJhBL,EDEiB,CNFJ7G,CAHI,AWeO,CHNxB,AGME,EXZe,CAHA;AD0BnB,ADCA,AeRAqL,ANdE,ANCQ/K,AIgBN,AFrBe,AKQjB,ACJaN,AGeR,ADAJ,GAND,CEKE,CAAC4F,ENdElG,EKeSyI,GXdN7H,AQDKN,CAHI,GFGjB,AEAiB,CAHA,ENEGW,ASgBf,ECDP,CAAsBK,AZnBH,AWoBU,GXdNlB,CANJ,KEIe,CAACc,IAAb,CAAkB,IAAlB,EUeUO,AVfcrB,CAAxB,CAHH,SUkBnB,EAA6C,UAACkG,KLV3B,CKU0B,EAAY,cNdtC,ACIgBhC,eAAhB;ATkBnB,ADCA,AeREmH,AbpBiB,AOKA,AFiBf,ACjBe,AEIA,AIYjB,ECDAA,GAAG,CAAC1B,ADCArB,ELXahF,QALA,EMejB,CACEiI,EDAiB,ECAb,CAACxL,ADAewI,KLNLhF,GMMf,ADA4B,CAACiF,CCD/B,EAEE,INjBe,OKgBK,CAAwBb,QLC7BnE,EKDuC,CAACoE,ULhBxC,MKgBK,CAAtB,WLaiBnE,cA7BA;ARuBnB,ADCA,AePMzB,AbtBa,ACAA,AIsBf,ACjBe,AHJA,AKQA,ACPA,AGoBjB,ADAA,IEAIA,EDAAyG,CDACrB,IAAL,CEAY,EAAElB,AFAF,ECAE,GAAGqC,CCAG,AbnBArI,CamBC8B,AbnBA,GAAGlC,EWmBA,CCAC,CAAC0I,CCAxB,AbnB2B,CAACvI,MAAN,GAAeD,CAAf,EYmBP,CZnB0B,AYmBF2H,CZtBxB,SYsBkC,CAACE,WAAnC,CAAjB,iBNwBE,kBAAyB5E,IAAzB,EAA+BC,KAA/B;APjBJ,ADCA,AeRiCjB,AbtBd,AOKA,ANLA,AIuBTN,ACuBN,AH1CMZ,AKKS,ACPA,AGqBjB,ADAEsG,IED6BpF,AFC7BoF,ECAEqB,MCDmC,AVlB/B3H,EUkBiCmF,CVrBxB,ASsBJ,EDAE,CFlBKhG,AGkBJqI,ADAAzB,CFlBK,CIiB0B,CAAC7E,CJjBxBnC,EJkBhB6B,EJfFnB,AWekB,ADAT,CFlBc,AGkBJgI,ADAvB,CFlB4BvI,MAAN,CJiBtB,CJdc,CQHuBD,CJkBjB,AIlBE,CRGL,CARF,AIsBf,CIjByC,AGkB3B,CHrBC,AGqBuB2H,UAAU,CAACG,UAAnC,CAAhB;AbOF,ADCA,AeTI,AbtBe,AOKA,AFmBT9H,ACsBN,AH7Ce,AKQA,AEJnB,ADHmB,AGsBjB,ADAC,GEJD,AFEA,CDjBIqE,CGkBFiD,CDCEqB,IFnBM,GAAG,EEmBA,GAAGJ,MCDPb,ARCD1H,CAFN,COEsB,CAACwI,CPAb,CAFV,EQFF,UDIgB,CAAwBb,UAAU,CAACI,kBAAnC,CAAhB;AbOF,ADCA,AePEsD,AbzBiB,AOKA,ANLA,AIyBTnL,ACqBN,AH7Ce,AKQA,AEHjBoE,ADJiB,AGuBjB,ECAA+G,AHnBA/G,GGmBG,CAACoF,ADAAd,OAAJ,GFnBc,EAAE,CPAN,CODG,GGoBb,CRAQ1I,AFnBOE,CEgBb,GAGU,CAHV,EAIE,QFpBM,CAAqBJ,CAArB,EAAwBe,GAAxB,CALO;AJ+BnB,ADCA,AePC,ANrBkB,ANLA,AK8Cf,AEnCAlB,AEJF0E,ADLiB,AGwBjB,ADAA,CEPF,CHZEA,IEmBIsE,CDAC/C,GDnBG,EAAE,EFIRjG,GIeF,IJfS,CAACwC,CGeV,GAAwB,CHftB,GAAgB5B,MGegBsF,SAAV,EAAqBC,QAArB,EHfOtF,AGewB,OHfrD;ATsBJ,ADCA,AeNA6K,Ab5BmB,AOKA,ANLA,AIsBf,ACwBA,AH7Ce,AKQA,AEJJ,AEsBb,ADAEpG,CDtBJ,GGuBI,AFDAA,CECCW,CDDCgD,IDAI,CAAC/C,CCAC,GAAG,CAAb,IDAQ,CECV,AFDI,CECkB7E,EFDE8E,IHdZ9B,IGcR,WEC4B9C,ALnBb,eKmBnB,EAAiD,UAAC8E,MAAD,EAAY;AdM7D,ADCA,AeNEmF,Ab7BiB,AOKA,ANLA,AIsBf,ACwBA,AH3CkCrL,AKMnB,ACPA,AG0BjB,ADAC,EECDqL,CFHA,EEGG,CAAC1B,ADDAZ,IAAI,ETzB4B/I,CAAC,ASyB1B,CAAX,CT3BiB,GU4BjB,AJvBU,CIuBOuL,EbzBD1L,EayBK,AJvBNwC,CIuBOtC,IbzBC,ASEb,CTFcI,CKuBbH,ACqBHF,CDrBI,CQEK,AJvBOW,EIuBxB,ARFegB,CCqBF,COnBqB,APmBpBxB,KDrBQ,CAACA,ACqBf,GAAe,CAFrB,AEhCO,CRVO,CAA2BC,AKuBhC,CLvBK,EAA8BA,CAAC,AKuBdA,CAAC,CGlBjB,CRLiC,CAAlC,AKuBqBwB,CL3BpB,ESMoBhB,KJqBQ,CAACT,CIzB7B,KJoBf,MGLO,WDiBP,ACzBe,kBDyBeH,KAA9B,ACdO,EDc8BE,CAArC,QCzBe,uBAcR,OAdQ,wBAiBR,OAjBQ,wBAmBR,MAnBQ;AT0BnB,ADCA,AePsCgC,ANKlC,AFZA,ACwBA,AH7Ce,AKQA,AECZ,ADRY,AG4BjB,ICDoCA,GDC/BgH,EFpBSxE,GGmB8B,EAAE,CAAC,ADC/C,CCDkC,EDClB+D,EFpBX,CAAqB9D,CAArB,EAAwBC,EEoBL,CAAC8D,KFpBpB,EAAkC,OEoBvB,CAAwBb,UAAU,CAACK,SAAnC,CAAhB;AbMF,ADCA,AeRoD/F,Ab7BjC,ACAA,AIsBf,ACwBA,AH7Ce,AOUjB,ADTiB,AG6BjB,ADDA,IEDkDA,EHlB9C0C,CEoBCsE,ADDAhD,KEDqD,EAAE,CAAC,GDE7D,EFpBkB,CEoBCsC,EFpBE,GCmBrB,GCC2B,ADDA,CCCCC,EFpBxB7D,OCmBiCoB,KCClB,CAAwB4B,CFpBtB,CAAU/C,CCmBJ,EDnBN,ACmB2B,EDnBZC,GAAf,AEoBgC,CAACoD,CFpBb,eEoBtB,CAAnB;AbMF,ADCA,AeToC,Ab7BjB,AOkCf,ANlCe,AIsBf,ACwBA,AErCe,AEGf,ADVe,AG8BjB,ADDE,GEFF,IDGKiB,IFpBI1G,ACmBA2C,IDnBI,CAACL,CCmBC,CAACiB,CVtBH,ESGJ,AEoBT,CFpBoBvD,ETHFrC,AWuBIoI,EFpBE,CAACxD,ACmBV,CAAb,ICC4B,CFpBV,AEoBWyD,MFpBM3D,GTHxB,ASG2B,CTHHrE,ESGMoE,EEoBrB,CFpBF,AEoB0B+C,IFpBI/C,CTHrC,EAAoCpE,ASGxC,CAAP,EEoBsD,CAAC0H,MXvBE,GAAG,CAAjD,CATI,KWgCK,CAAtB;AbMF,ADCA,AeTEmD,Ab9BiB,AOkCf,AJjCe,AKcXlH,AEFL,AEoBD,ADDC,EEFDkH,CHnBA,ACmBA,EEAG,CAAChC,CDGCF,ICHL,CAAU/B,CDGV,CJlBMjD,EKeN,ADGcoE,IJlBF,GAAG,CIkBO,CAACC,EJlBJ7I,YIkBL,CAAwBgI,UAAU,CAACQ,EJlBlC,CAAiBtI,OAAjB,CAAT,MIkBQ,CAAd;AbMF,ADCA,AeTC,Ab/BkB,AOkCf,ANlCe,AIsBf,ACwBA,AH7Ce,AKQA,ACPA,AGgCjB,CCNF,MDMOuJ,UAAL,GAAkBb,QAAQ,CAACC,cAAT,CAAwBb,UAAU,CAACS,iBAAnC,CAAlB;AbMF,ADCA,AeRAiD,AbjCmB,AOkCf,ANlCe,AIsBf,ACwBA,AH7Ce,AOajB,ADZiB,AGiCjB,ADDA,GEDC,CAAClC,EHnBEnE,ACoBAjD,CCCCsH,GCFP,CAAWvD,CDET,EDDY,CDpBC,AEqBA,EDDE,CDpBC,CDPE,AG4BDe,KH5BM1G,EE2BnB4B,CEDN,AHnBMiD,CGmBsB,GRHdnF,ACmBQ8C,AMdP,EAAb,CDDe,CEDjB,AFC2BoD,CDpBT,CGmBmB,AHnBTd,CLgBP,CAACrD,CCmBS,CAACqB,AInCd,CDPE,CCOc,ADPU/C,CAAxB,AE2BH,CLec,CG1CgBA,AE2BTgG,CEDAsF,APgBAtI,AG1CU,CI0BX,EAAO,AJ1BO,CAA/B,CJuBN,ACmBiB,AG/CZ,AEgCF,CNJmB,ACgBhC,CKZ0C,ENJhC,EAA2BrB,IAA3B,CAAgC,YAAM;ANWpD,ADCA,AeRE4J,ANCQ/H,AFJA,AF9BS,AKQA,AEMf,AEqBF,ADDE,EEDF+H,KDEKpC,CFrBCvJ,ACoBAkG,EEDE,EDER,CFrBW,AEqBAF,GFrBG,ACoBA,GAAGX,CDpBCD,IHoBVxB,CGpBM,ACoBS,CDpBCuB,ACoBAc,GCCxB,CPLYtE,AKhBE,AEqBckF,CFrB1B,ICoBqB,CAArB,CNJiB,CEGjB,AFHkB3G,CAAD,CAAP,CEIa,CAACA,CAAC,AFJF0B,GEIK,CAAL,EKCekF,ELDL,AFJF,CEIR,AFJS1G,CAAD,AOKjC,CPLQ,CEI+B,AKCO,CLF5C,AFHoCyB,SOKSuE,EPLE,CAACpE,GOKJ,CPLR,CAAiBL,AOKG,OPLI,CAACzB,CAAC,EAAF,CAAxB,EAA9B,KACK2B,WAAW,CAACG,IAAZ,CAAiBJ,QAAQ,CAACxB,CAAC,EAAF,CAAzB;ANUf,ADCA,AeRC,AbnCkB,AOoCTyD,ANpCS,AIiCT9D,ACaN,AH7Ce,AKiBXsE,AChBW,AGmCfsE,ADDA,CEHJ,GDIIA,IDDIzC,MHlBA7B,AImBM,CAACmF,CDDX,EAActD,EHlBJ,GAAG,CDkBPrC,AKCN,EPJM9D,AMGgB,CHlBLQ,AGkBM6F,MNHV,AMGS,CNHRnE,AMGA,GCCYS,CLH1B,GAEuB,AKCO,CLDNxC,AFHlB,AOIyB8E,CLDN,AFHF5D,GEGK,CAAL,AKCG,CAAWgF,GLDJ,CAFjC,EKG2C,CAACc,IJnB/B,EAAT,GHe6B3F,EOII,GAAqB,IAAhC,CAA1B,CPJM,EAAwC,YOK5C6E,MAAM,CAACc,WAAP,GAAqB,IADvB;AbMJ,ADCA,AePAqE,AbrCmB,AOqCTzH,ANrCS,AIkCP5B,ACeJmB,AHhDW,AKQA,AEOf,ADde,AGsChB,ADHA,GEAA,ADDD,ADFA,CEGE+F,KHrBK,IAAIlJ,CAAC,GAAG,CGqBjB,AHrBI,CGqBe8F,CHrBC9F,CVXJH,AUWK,GHqBX+D,ADYFT,AIjCgB8B,IVXD,AK6BXjD,AKlBR,CVXoB5B,AMyCpB,CI9B0BJ,CAAC,EAA3B,EGqBJ,AHrBmC,CGqBC,ARHhB,CEAhB,CFAkBgB,EEIdlB,GMDR,CbhCgB,CagC6B,AbhCLI,AOiC3B,CPjCG,AOiCFwD,EPjC6BxD,AK6BX,CL7BY,EK6BTyB,CL7BY,CAA/B,CALG,CaqC2B6J,CAAD,EAAO,ENCvC,CAAL,CFJsC,CAACvL,CEIfH,KAAK,AFLa,CEKZ6D,cAAD,CAA7B,GACID,cADJ,GAEIC,cANR,EAMwB;ARI5B,ADCA,AePE8H,AZtCiB,AImCPxJ,AFlCO,AOgBbnC,ADfa,AEoClB,EEAC2L,CVrCA,GOgBI3L,IGqBI,CHrBC,CAACE,CAAD,CAAL,GAAW2E,WLkBL1C,GKlBmB,CAAC,EAAD,ELkBX,AKlBgB,ELkBdjB,CKlBS,CAAzB;AX4BN,ADCA,AePC,AbvCkB,AOkCf,ANlCe,AIiC+B,ACa9C,AErCe,AESd,ADhBc,AGwCjB,CCLF,MDKOuI,UAAL,GAAkB,OPTV,GEUFzJ,ADOImD,EMRoB,ENQhB,CCPH,CAACW,CDOKT,KAAK,GAAG,CAJvB,GCHS,CAAL,IAAwBU,SAAxB,IACA/D,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAAC8D,aAAD,CAVpB;ARYJ,ADCA,AeNAyH,AbtCgDnL,AO+B5C,ANlCe,AIqCV,ACSL,AHrCF,AKYMiE,ACnBW,AGyCf2E,GCFD,CAACM,ADEAN,ETlCEjI,ISkCI,GAAG,CCFb,AbtCgDX,AQkBxCiE,AIsBJ,CCFW2B,AbtCkC,EAH9B,CGSD,EKYJ,GAAG,EHSH,CARV,CGDiBlF,IKoBrB,CAAgC,OAAhC,EAAyC,UAAC4K,CAAD,EAAO,KLpB/B,EAAT;AT0BR,ADCA,AeNE,Ab1CiB,AOkCf,ADYA,AHrCc,AKAC,AEUf,AEyBA9C,IAAAA,ECFE6C,IAAI,CAAClJ,AHvBAvC,EEyBE,CAACwJ,ECFR,AHvBF,IGuBgB7I,GDEhB,GAAsB,GAAtB,kBCF6BE,OAA/B,EAAwC,gBVjCrB,kBAAgBK,UAAhB;AJuCrB,ADCA,AeNIqK,Ab3Ce,AOkCf,ANlCe,AIsBf,ACwBA,AHrCiB,AOWlB,ADlBgB,AG2Cf5C,GF/BF,CG6BE4C,ADEA5C,GCFG,CAACY,KAAJ,CAAUpC,ADEA,CAACqC,ICFX,KDEA,GAAuB,QAAvB;AbIJ,ADCA,AeNIiC,AZ5Ce,AIsBf,AFbiB,AKAF,ACPA,AG4CfxC,ICFAwC,ADEAxC,ICFI,ADEA,CCFC9E,EDEE,CAAP,MCFA,CZjCU,AQHI,KRGC7D,AQHIA,eRGT,AQHI,CRGiBI,AQHIN,CAArB,EAAwBA,CAAC,GAAG,CAA5B,CANC,CRS0B,GAAG,CAAlC,EAAqCM,UAArC,CAXK;AFkDnB,ADCA,AeNG,Ab7CgB,AOkCf,AFZA,ACwBA,AHrCiB,AKeb2D,AEHN,AE0BEwE,IAAAA,EF1BE7I,KAAK,EE0BE,CJvBLqE,AEHMa,AE0BAsE,MJvBA,GAAG,AEHM,AE0BnB,CF1BoB7E,CAAD,CAArB,AE0BwB,CJvBLnD,EIuBjB,GLDuC,CAACxB,KAAK,CAAC8D,YCtBjC,CDsBgC,ACtBhB/D,CDsBU,EAAuBC,ICtBjD,CDsBsD,ACtB/D,CDsBgEE,CAAD,CAA5B,CAZvC;ARiBJ,ADCA,AeNC,Ab5CqCA,AO4C7BF,AN9CU,AK8Cf,AHrCiB,AKAF,AEajB,ADpBiB,AG8ChB,CCPH,EDCE,GFpBIqF,MAAM,EVpB0BnF,CAAC,AUoBxB,EVtBI,AUsBjB,OHwBOF,KAAK,CAACE,CAAD,ADME4C,CClBZ,QDkBqB,CAACK,IAAD,EAAOE,KAAK,GAAG,CAAf,CANrB;APMJ,ADCA,AeLAkI,AbhDmB,AO8CAvL,ANlCXU,AIUJ,AFbiB,AOcnB,ADlB8CN,GI2C7C,CAAC8I,EHzBE5D,MGyBN,AZpCQ5E,AQPwCN,CI2CnC4F,AJ3CoC,EAH9B,ORUD,ASWI,EHuBHhG,CGvBM,EAAvB,EGyBF,ANFwB,CMEM,ANFL8D,OMEzB,EAAuC,INFf,CAZpB,KMcoC4H,CAAD,EAAO;AdK9C,ADCA,AeN8C,AbhD3B,AO+CX3L,AN/CW,AIuCb8B,ACOF,AHpCIV,AKDW,AEejB,ADtBiB,AG+CjB,MFzBIoE,CEyBCmE,OTvCCvI,COcO,GAAGR,IPfG,EIsCbZ,AFRF8B,CF7BaX,CSuCjB,GAA2B,ELFd,CAACe,GFRC,AF9BI,GE8BDJ,EEQZ,CAAiBT,AKEgB,ICArBmK,AHzBW1K,GGyBR,CAACqI,ARVO,CAAC9G,EKf9B,ILekB,CQUA,ARTZT,CQSyBiK,INFEvK,EFPpB,CAACgB,CQQ8B,IRRtC,CAAcnC,CAAd,CEOA,CFPiBkC,CEOuB,KFPxC,CAAwBR,QAAQ,CAACS,KAAT,CAAejC,CAAf,CAAxB,CADY,CAAd;ANeN,ADCA,AeP8C,ANApC8B,ANhDS,AK8Cf,AHnCShC,AKgBLmE,AEFN,ADvBiB,AGgDfuE,IAAAA,EFzBExE,OEyBO,CTvCAlE,AKgBLmE,AIuBMmF,CTzCO,GAEJtI,EKgBH,CEFO,EFEJ,AIuBb,CFzBoB0D,EHuBd1C,AKEgB,CJvBLU,AIuBM,CTzCN,CSyCQoG,CNIjB3F,EI7BV,EHuBgB,CDMD,AMJS,CLFNS,CKEiB6F,CNIjBvG,KARhB,EMIsB,EAAtB,ELH4C,ECpB/B,CAAgBrD,OAAhB,CAAT;AT4BR,ADCA,AExDmB,AOiDToC,AF3BN,ACwBA,AMKD,GAFD,uBLAQA,QAAQ,EAAEjC,WFNRA,EArBR;ANkCJ,ADCA,AeT8C,AbhD3B,AO+C6B,AN/C7B,AI+CXH,ACDJ,AHrCiB,AKAF,AEkBjB,ADzBiB,OCyBZE,QAAL,GAAgB,OHoBV,CFAAF,IKpBsB,GLoBf,CAAC+B,aAAR,CAAsB,GAAtB,EAA2BC,IAA3B,CAAgC,UAACO,OAAD,EAAa;ANUrD,ADCA,AeTE,AbjDiB,AOmDXqB,AN9C8BzD,AI2C5BF,ACFN,AHrCiB,AKoBbqE,AEDJ,ADxBkCnE,AGiDpC,OAAK0J,IFzBI5J,CTvB2BE,AQDAA,CRCC,AQDA,CDyB/BmE,CP7BW,AQEA,CC0Bf,IPjByBnE,AKkBf,CLlBgB,EKkBb,CDsBTyD,AJxCyB3D,AS0C/B,GJxBmBuD,AIwBM,CPLjBvD,CFrC4B,CAACG,GEqCxB,CAACD,EAAC,AFvCI,EI0CC,CAACF,AFHHkB,AOKmB,KLFjB,EAAQ4C,GFHf,AGnBE,CHmBP,AGnBsB/D,GHmBE8B,GQCS,CLpB1B,CAAT,CDsBc,CAAd,IFHqC,CAAC3B,EAAD,CAAnC;ANUV,ADCA,AeV2C,AbjDxB,AOkCf,ANlCe,AIiDTH,AFxCW,AOoBlB,AD3BgB,AGoDf8I,GF3BF,CE2BEA,MCLOgD,GDKE,CAACrC,CCL6B,QDKvC,GAAsB,CAAC,CPLjBzJ,COKmBkJ,IAAH,EPLT,AOKkBU,CPLjB1H,OOKQ,CPLhB,CAAiBb,AOKvB,qBPLiCC,WAA3B,EAAwC;ANUlD,ADCA,AeVIwK,AblDe,AOkCf,ANlCe,AIiDiC3J,ACHhD,AHrCiB,AKAF,ACPA,AGqDhB,GAFD,GCHE2J,KAAK,CAACC,SAAN,GAAkB,MRD8B5J,CEGtCnC,OAAO,AFHuC,CEGtC+B,CMFlB,ARD0D5B,EAAC,GAAGgB,OEGpD,CAAsB,GAAtB,CAlBV;AR0BJ,ADCA,AeVG,AbnDgB,AKiD+B,ACH9C,AHrCiB,AKAF,AEsBjB,OAAKsE,cAAL,GAAsB,KLkBd,ECOM1C,GIzBkB8B,MJyBT,CAACvB,CIzBF,EAAoB,EJyBnB,EAAQD,KAAR,CAVrB;APeJ,ADCA,Aed8C,AbhD3B,AOkCf,ANlCe,AIkDV,AGzCU,AEuBfgB,AD9Be,AGuDjB,IFzBEA,CVhCF,EYyDKyF,YFzBY,AEyBjB,EJ1BqBxF,CECDO,AEyBA,KPVd,AGhBqB,CAAC9E,EEC1B,EEyB4BE,KJ1BT,AI0BD,CJ1BkBgB,CI0BD8I,GJ1BhB,CAAsB/J,OAAtB,CAtBJ,aIgDG,EAA4CgK,KAA5C,EAAmD;AbKzE,ADCA,Aef8C,ANd1C,ANlCe,AIsBf,ACwBA,AHrCiB,AOwBlB,ADrBCvJ,AG8CAwJ,GF3BF,CE2BEA,QH9CAxJ,OAAO,CAACC,EG8CU,CH9ClB,CAAYT,KAAZ;AVmDJ,ADCA,AehB8C,AbhD5C,AOkCE,ANlCe,AK8Cf,AHrCiB,AKAF,AIkDfiK,IAAAA,iBT/CY,AS+CK,CAACjK,IT/CDK,CS+CM,CAACF,MAAP,CAAjB,ST/CY,CAAwBD,CAAxB,EAA2BiB,QAA3B,CAHK,CGkDRnB,KAbT;APkBJ,ADCA,AejB8C,AbhD5C,AOkCE,ANlCe,AI0Cb,AGXFsE,AEIF,ADjCiB,OCiCZmB,OFJHnB,IEIF,GAAmB,GF1BF,KHkCPpE,EADN,AKPyBwF,GLQf,CADV,EAEExF,CKTa,CLSZ,CKT+B,ELS5B2B,WAAW,CAAC1B,MAAhB,IAA0BJ,OAAO,CAACwC,KAAR,IAAiB5B,2BAAaC,OAF1D,EAGEV,EAAC,EAHH,EAIE;ANmBR,ADCA,AelB8C,AbhD5C,AOkCE,ANlCe,AI8CX,ACAJ,AHrCiB,AKuBjBM,AEIAR,ADlCe,AG0Df,IFxBAA,KAAK,AEwBA,GFxBGkF,CEwBChF,CJ5BTM,AI4BU,GAAG,CAAb,EAAgBN,CJ5BT,AEIU,AEwBA,CJ5BTO,AEIUiF,EEwBE1F,CJ5BpB,CAAYsE,GEIK,AEwBQ,CFxBzB,AEwB0BnE,EPjBlBD,EAGJ,EGdJ,AI4BA,EJnDe,AImDmBA,CJ3BlC,AI2BmC,EAAnC,EAAuC;AbM3C,ADCA,AEnEE,AOkCE,ANlCe,AImDZ,ACLH,AHrCiB,AO4BlB,ADnCgB,AG2DbgK,GF1BJ,GE0BIA,cAAc,CAAClK,KAAD,EAAQE,CAAR,CAAd;AbMN,ADCA,AehBEwL,Ab3CD,AOyBG,ANlCe,AK8Cf,AHrCiB,AKAF,ACPA,AG4Dd,ECVHA,CAAC,AZpDD,CYoDEK,MAAF,CAASD,IN/CQ,KM+CjB,GAAqB,uBAArB,CLlBSxH,UAzBQ;AT2DnB,ADCA,AehBEmH,ANhDiB,ANWlB,AIMG,ACwBA,AHrCiB,AO8BnB9F,ADrCiB,EImDjB8F,AHdA9F,IGcI,CAACH,CHdC,CAACI,YGcP,CAAoB8F,CAAC,AHdrB,CGcsBK,AHdA,IAAtB,EGcoB,AHdQ,CGcCC,EAA7B,GHdA,EAAoC,oBLazBnK,WA9BT;AN+CJ,ADCA,AehBE8J,ANjDiB,ADyCf,AHrCiB,AKAF,AE+Bf9F,ADtCe,AG6Df,ECTF8F,EHdE9F,GAAG,CEwBDiE,CFxBG,CGcC,cHdW,SEwBU,CAAC3H,QAA1B,GAAqCnC,KAAK,CAACG,MAA3C,IACA2J,yBAAyB,CAAC3H,QAA1B,GAAqC,CAFvC,EAIE2G,OAAO,CAACgB,yBAAyB,CAAC3H,QAA3B,CAAP,CAA4CgI,KAA5C,CAAkDC,eAAlD,GAAoEL,KAApE;AbGN,ADCA,AehBC,ARjCG,ACwBA,AErCe,AEgCb,ADvCa,AGkEf,CCpBJ,EJ9CE,KGmEID,KF5BO9J,KAAK,CAACG,MAAb,QE4ByB,CAAC+B,QAA1B,GAAqClC,KAAK,CAACG,MAA3C,IACA2J,yBAAyB,CAAC5H,QAA1B,GAAqC,CAFvC,EAIE4G,OAAO,CAACgB,yBAAyB,CAAC5H,QAA3B,CAAP,CAA4CiI,KAA5C,CAAkDC,eAAlD,GAAoEL,KAApE;AbDN,ADCA,AStCmBpG,AFZf,ACwBA,AHjCIxC,AKJW,AEiCd,AD5BJ,AG2DE,GAhBD,EFlBoC,OHLnBwC,EJrBXxC,CGRW,OHQH,GAAGjB,CIRA,AJQX;AJ2DR,ADCA,AehBA,ANpDmB,AFiBf,ACjBe,AEIA,AEkCf4F,IAAAA,GAAG,EGcE6F,AHdA,QGcT,GAAoB,EHdD5F,KAAV,EAAiB;AX8B1B,ADCA,AehBEwF,ANrDiB,AFiBf,ACjBe,AHIE,AKAF,AEmCb,AE+BJ,ECjBAA,GAAG,CAAChC,ADiBAS,KCjBJ,AHdShK,CGcCsH,IAAV,AHdI,GAAapC,KE+BK,GAAG,CF/BC,CAACa,KAAD,CAAtB,CE+BAiE,kBAAqB,GAAY;AbDvC,ADCA,AehBEuB,ARrCE,AFX2CrL,AKF5B,AEoCd,AE+BD4I,ECjBFyC,EDiBEzC,CCjBC,CAACW,KDiBK,GTjEoCvJ,ASiEjCsI,CTjEkC,CUgD9C,CVlDmB,YSmEQ,CAAC6B,UAA1B;AbDJ,ADCA,AehBEoB,ANvDiB,AFiBf,ACwBe3I,AHrCE,AKAF,AE8BmB,AEsCnC,ECjBD2I,CHrBA,AEoCA,EJlEA,CKmDI,CAACpF,KPdYvD,MOcjB,GPvDiB;APuEnB,ADCA,AehBE0I,ANxDiB,AFiBf,ACjBe,AHIE,EUoDnBA,WAAW,ERzDM,CQyDHD,GAAG,CAAClC,MAAJ,CAAWtD,KAAzB,uDNvCE;ARuDJ,ADCA,AehBE0F,ANxCE,AFlBe,ACCA,AEIjB,AEuCA,AE+BA,ECjBAA,IAAI,ADiBAxB,CCjBCxE,AHdAO,WGcL,CAAiBwF,IHdjB,AE+BqB,GF/BG,AE+BA,ICjBxB,KDiBIvB,CF/B8BhE,SAAV,EAAqBC,KE+BrB,CAAUoE,EF/BV,EAA+B,OE+B/B,EAAuB;AbDjD,ADCA,AehBEiB,ANzCE,AFlBe,AFKE,AKAnB,AEwCElG,AE+BA0D,ECjBFwC,EHdElG,AE+BA0D,CCjBC,CAAC4B,IHdI,CAAC1E,IE+BI,GCjBb,ADiBgBuC,CCjBCiD,CHdT,CAAN,EGcmB,CAACxL,AHdAiG,QGcL,AHdf,CE+B6B,CCjB/B,ADiBgCqE,WAAhB,GAA8BD,WAA5C;AbDJ,ADCA,AehBC,AN1CG,ADjBe,AHIE,AKAnB,AEyCC,AE+BA,GFjCD,AE+BA,6CT/DSnJ,QAPU;AJuErB,ADCA,AS3DI,AFAeO,ACjBA,AEIjB,YHaiBA,WAlBA,4DCKf,iBAAyByB,IAAzB,EAA+BC,KAA/B;APwEJ,ADCA,AS5DI,AFlBe,ACKf,AHAiB,AK2BpB,AEgBC,AE+BA,MAAI8G,CF/BC/D,aE+Ba,GAAG,GF/BrB,GAA2B,GE+BvB+D,OF/BiCjE,OE+BhB,CAAUjG,CF/BJ,EAAqB,EE+B3B,EAAiBwK,WAAjB,EAA8B;AbDrD,ADCA,AS5DUxG,AFnBS,ACKf,AHAiB,AO4CjB,AE+BA,QAAIyG,GF/BGpF,MAAM,CAACY,EE+BE,GAAGuB,CL7DbxD,GG8BO,CAAb,CE+ByB,CAACyD,OL9D1B,CK8DA,qBL7D0BzH,KAD1B;AR6DJ,ADCA,AS5DeE,ADfX,AHAiB,AO6ClB,AE+BC4I,GFjCF,CEiCEA,OAAO,CAAC0B,WAAD,CL7DItK,AK6DX,CL/DA,AK+DqBiK,GL7DN,CAFf,CK+DA,CAA2BO,MAA3B,GAAoC1K,KAAK,CAACwK,WAAD,CAAL,GAAqB,IAAzD;AbDJ,ADCA,AOjFmB,ACKf,AHAiB,AS6EjB1B,IAAAA,OAAO,CAAC0B,WAAD,CAAP,CAAqBL,KAArB,CAA2BC,eAA3B,GAA6CK,YAA7C;AbDJ,ADCA,AShEI,AFlBe,ACKf,AHAiB,AO+CnBnF,AE+BE,EF/BFA,ME+BMyD,UF/BU,CAAC9G,AE+BA,GAAG,EAAlB,EAAsB6G,CF/BxB,GAA4B,GE+BG,CAAC0B,MF/BMvE,KE+BP,CAAP,CAAqBuD,EF/BjB,EAAqBpD,KE+BzB,CF/BI,EAA6B,AE+BApG,KAAK,CAACwK,WAAD,CAAtC,MP/EtB,iBAAyBhI,aAAzB,EAAwCtB,UAAxC;AN8EJ,ADCA,ASjEI,AFdA,ACEMoC,AHDW,AOgDjB,AE+BD,GALD,KF1BQ4C,QAAQ,GAAGb,KJ/CX/B,CI+CiB,CAAC2C,GJhDxB,CCekBjC,EDdJhE,GI+CS,CAAvB,CJ/CmB,CAAC0C,IAAI,CCcO,ADdNC,CCcOxC,IDdZ,CAAW,CCcb,ADdciD,GCcS,CAFzC,CDZqC,GAAGD,IAAT,IAAiB,CAA5B,CAAD,CADnB,EACqD;AP6EzD,ADCA,ASlEI,AFdA,AFCiB,KAAH;AJ+ElB,ADCA,ASnEI,AFdA,ACGMjD,AI+CN,AEgCF,OAAKyK,CFhCCzE,QAAJ,EAAc,CEgChB,GAAoB,EN/EZhG,CAFN,GAEUiD,IAFV,AMiF4BnD,EN/EZ,GM+EE,EAAiB;AbDvC,ADCA,ASpEI,AFdA,AFCc,AOkDZkG,AEgCF+D,IAAAA,EFhCE/D,QAAQ,CAACE,KPlDTrF,COkDQ,AEgCO,CFhCf,AEgCgBf,KAAK,CAACG,ITlFV,ESkFG,CAAjB;AbDJ,ADCA,AOnFI,ACIMC,AHHQ,AOmDb,AEgCDoI,IAAAA,eAAe,CAACoC,INhFVxK,CAHN,GAGUgD,CMgFV,GAA4B,CNnF5B,CMmFA,CNhFiB;AP+ErB,ADCA,ASnEQpD,AFhBFQ,AFAY,AOoDf,GALD,qBH/BMR,AFhBFQ,KEgBO,CAACN,CAAD,AFhBA,CEgBL,AFhBMO,GEgBKuD,AFhBb,CAAYxB,YEgBc,CAAC,AFhB3B,CEgB0B,CAAxB,AFjBJ,CEcA,AFZE,CEe+B;ARmErC,ADCA,AQpFI,AHAc,ASoFd,KTpFF,ISoFO,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AbA3C,ADCA,ASpEQ8D,AFlBJ,ACCA,AHSH,AO6CC2B,AE+BI,EF/BJA,MAAM,CAACC,CE+BCiF,MAAM,GAAGC,IF/BjB,CHrCM9G,AGqCgB,IAAtB,ELpDQxB,ACEGtC,AIkDiB,CJlDhB,IAAIE,CAJd,CCiBiB,AGqCnB,CHrCoB,CAAD,AGqCkB,CHrC/B,AKoEgC,CAACJ,ELpEdgE,AFfJ,CAAC7D,EOmFsB,CAACD,CAAD,CAAN,CPnF9B,AOmFJ,IPnF4B,CAH9B,CEkBoC,CAAC8D,aAAa,CAAC7D,MAAd,GAAuB,CAAxB,CAAhC,CAJJ,CAIgE;ARoEpE,ADCA,AOvFI,ACCA,AIuDA0F,AE+BE2C,IF/BF3C,EE+BE2C,CF/BC,EAAE,YE+BY,CAACuC,EF/BD,SE+Bf,CAA4BF,MAA5B;AbAN,ADCA,ASrEQ7G,AFnBJ,ACCA,AIwDE,AE+BD,aF/BQuB,SAAP,EHtCEvB,aAAa,CAACC,GAAd;ARqER,ADCA,ASrEQN,AFpBJ,ACCA,AIyDC,AE+BF,GAPD,EF3BqC,mBHnC/BA,cAAc,CAACK,aAAD,EAAgB,CAAhB,CAAd;ARqER,ADCA,AS5EI,AG6CA8B,IAAAA,GAAG,EAAE,aAAUC,KAAV,EAAiB;AX+B1B,ADCA,AS7EI,AFdA,ACCA,AI2DER,AE+BJ,MF/BIA,AE+BAuF,SF/BS,GAAG/E,KAAZ,IE+BqB,GAAG,CLtEhBhG,OAAO,CAAC+B,AKsEhBgJ,aLtEQ,CAAsB,EAAtB,CAPV,CFXwCtI,GOwFd,CAAUuD,KAAV,EAAiB,EP3F3C;AN2FJ,ADCA,AQ3FI,AI4DC,AE+BD,QAAI8E,MAAM,GAAGpC,QAAQ,CAACuC,INtFXhL,KAAK,CAACE,CAAD,CAAL,CMsFE,CAAuB,CNtFdoD,IMsFT,CNtFF,AMsFX,INtF+BvD,OAAO,CAACwC,KAAR,IAAiB5B,2BAAaC,OAL7D;AP2FJ,ADCA,AS/EI,AFdA,ACCA,AIsDmC,AEsCnCiK,GFtCF,CEsCEA,MAAM,CAACV,KAAP,CAAaO,MAAb,GAAsB3E,KAAK,GAAG,IAA9B;AbAJ,ADCA,ASxEQhG,AFlBE0C,ACHN,AM6FAoI,IAAAA,MAAM,CAACV,KAAP,CAAac,KAAb,ELxEIlL,AFlBE0C,CO0FesG,KP9FrB,CEsBW,CAAC9G,CFlBGS,GO0FiB,CP1Fb,CAACC,CO0Fe,CLxE/B,CAAiBvB,EFlBN,AO0Ff,CP1F0BoB,aAAa,CAACrC,IEkBTkB,EFlBL,GAAuB,CAAlC,CAJf,IEsBI,EAAwC;ARwEhD,ADCA,ASzEkDa,AFjBxCP,ACJN,AI+DF,AE+BEkJ,IAAAA,GF/BGxE,GE+BG,CAAC8D,KAAP,CAAaC,CF/Bf,GAAmB,GL3DXzI,EEiBwCO,KFtB9C,CO+FA,CF/B6B,CH1CyB,AFjBtCM,CO0FegF,CLzEyBtH,KKyEnB,CAACuH,KP1FT,CAACpF,EO0F9B,GP1FgB,CAAoB,CAApB,EAAuBI,MAAvB,CALhB;AN+FJ,ADCA,AS1EgD,AFhBtCb,AK2DN2D,AE+BAsF,IF/BAtF,AE+BAsF,MAAM,CAACV,EF/BE,GAAGxJ,AE+BZ,CAAauK,OP1FPtJ,CEgBF,EK0EJ,GAA0B,EPhG1B,GAMiBY,AO0FjB,QF/ByB3B,KL3DK,CAACwB,CK2D/B,IL3DiB,CAAoBI,MAApB,CANjB;ANgGJ,ADCA,AOjGI,ACCA,AIiED,AE+BCoI,GFjCF,CEiCEA,MAAM,CAACV,KAAP,CAAagB,YAAb,GAA4BpC,MP1FnBrH,KO0F8B,GAAG,CAAd,EPjG5B,COiG8C,IAA9C;AbAJ,ADCA,ASpFI,AFdA,ACCA,AMiGAmJ,IAAAA,MAAM,CAACV,KAAP,CAAaiB,OAAb,GAAuB,IN3FXrL,EM2FZ,KN3FmB,CAAC+B,aAAR,CAAsB,EAAtB,EAA0BC,IAA1B,CAA+B,YAAM;AP2FrD,ADCA,ASnFgD7B,AFhB5C,ACQQH,AI4DV,AE+BE8K,IAAAA,GF/BG1G,GE+BG,CAACgG,KF/BT,AE+BE,CAAakB,EF/BE,KHpD6BnL,CAAC,CDRrCH,CCMR,IFNU0B,AK4DiB,AE+B3B,EN3Fe,CAACQ,AM2Fc,MP3FX,CAACN,CCAZ,AM2FR,CN3FyBP,KDAN,EAAUF,UAAV,CARnB,GCQmCK,WAA3B,EAAwC;AP2FpD,ADCA,AStFI,ADLUW,AI4DV,AE+BA2I,IAAAA,IF/BIxG,EE+BE,CAAC8F,GF/BG,EE+BV,CF/Ba,AE+BAmB,IF/BIpH,ME+BjB,CN3FUhC,EM2FgB,MN3FR,EAAEhC,AM2FpB,CN5FgD,UI6DnC,CAAkByF,MAAM,CAACW,MAAP,CAAc,IAAd,EAAoBhB,gBAApB,CAAlB,CAAb;AX+BJ,ADCA,ASvFI,AFdA,ACUUnD,AI4DV,AE+BA,QF/BImC,AE+BAyE,UF/BJ,CE+Be,GAAG,EAAlB,EAAsB8B,EN3FZ1I,IM2FkB,CAACqH,GN3FX,EAAEpJ,IM2FE,GAAmB2F,KAAnB;AbA1B,ADCA,AOtGI,ACQgD,AI+DhD,AE+BA,SF/BKxD,EE+BEsI,GF/BP,GAAalK,AE+Bb,UN9FQ,iBI+DkBC,OAA1B;AX+BJ,ADCA,ASzFI,AFdA,ACYQV,AI4DR,AE+BD,GAZD,KFnBMqG,GAAG,GAAG,IAAI1G,QJ5DNK,CAAC,WI4DC,EAAV;AX+BJ,ADCA,AS1FI,AFdA,ACaO,AM2FV,yBNjGe,CANZ,KDQUuB,SAAS,CAACG,QAAD,EAAWV,UAAU,GAAGuB,MAAxB,CATnB;ANwGJ,ADCA,AS3FI,AG2DA,YAAQ2B,eAAR;AXgCJ,ADCA,AS5FI,AFdA,ACCA,AIyEE;AXgCN,ADCA,AS7FI,AFdA,ACCA,AI0EE;AXgCN,ADCA,AS9FI,AFdA,ACCA,AI2EE,sCLlEElD,UAVJ;AN4GJ,ADCA,AS/FI,AFdA,AK6EE,eHhFa;ARgHnB,ADCA,ASjHmB,ADIf,AI6EE;AXgCN,ADCA,ASlHmB,AFGf,ACCA,AI8EE,8BJhESoC,KAAK,GAAGtD,KAAK,CAACI,CAAD,CAAb,IAAoBL,OAAO,CAACwC,KAAR,IAAiB5B,2BAAaC,OAd7D;AP8GJ,ADCA,AOhHI,ACCA,AI+EE;AXgCN,ADCA,ASnGmB8C,AFdf,ACCA,AIgFE,YHnEaA,aAjBA;ARoHnB,ADCA,ASrHmB,AFGf,ACCA,AIiFE;AXgCN,ADCA,AStHmB,AFGf,AKmFE;AXgCN,ADCA,AOpHI,ACCA,AImFIW,QAAAA,MAAM,CAACF,SAAP,CAAiBC,eAAjB;AXgCR,ADCA,ASxHmB,AFGf,ACCA,AIoFI,eLzFW,gBCoBHrE,OAAO,CAAC+B,aAAR,CAAsB,EAAtB,EAA0BC,IAA1B,CAA+B,YAAM;APqGrD,ADCA,ASzHmB,AFDA,ACqBPhC,AIwDR,KAL2B,CAmB3B,oBJtEQA,OAAO,CAACkC,QAAR,CAAiBb,qBAAUG,WAA3B,EAAwC,QCVhD;AR+GJ,ADCA,AShHI,AFXe,ACsBLW,AIsEV,4BJtEUA,QAAQ,EAAEhC,CAD4B;APsGpD,ADCA,ASjHI,ADYUiC,AIsEV,4BJtEUA,QAAQ,EAAE/B;APqGxB,ADCA,ASlHI,AFPeqB,ACiBiC,YDjBjCA,SAJA,MCqBP;APwGZ,ADCA,ASnHI,AFXe,ACyBPrB,AIqET,GAtBD,uBJ/CUA,CAAC;APqGb,ADCA,ASpHI,AFXe,AC0BR,yBANK,CAfZ;AP0HJ,ADCA,ASpHUqC,AGoFR,MAAII,SAAS,SHpFLJ,MADN,GACeC,IAAI,CAACC,KAAL,CAAW3C,KAAK,CAACG,MAAN,GAAe,CAA1B,CADf;ARqHJ,ADCA,ASpHeD,AFZXF,ACIA,AI2FW,YL/FXA,KAAK,GAAGD,IEYGG,CAFX,EFVe,CEYAuC,AFZCxC,MEUhB,EFVQ,EAAR,iCK+Fc,iBAAgBkD,IAAhB,EAAsBC,KAAtB;AXiClB,ADCA,AOhII3B,ACGA,AI2Fc,YL9FdA,SAAS,CAACzB,KAAD,EAAQ,CAAR,CAAT;ANgIJ,ADCA,ASxHI,ADNA,AI2Fc;AXmClB,ADCA,ASzHI,AFXe,AKgGD,8BHnFSE,CAAC,IAAI,CAF5B;ARyHJ,ADCA,AS1HI,AFXe,ACKf,AI2Fc;AXqClB,ADCA,AS3HI,AFXe,AC4BX,AIoEU;AXsClB,ADCA,AS5HI,AFXe,AC6BX,AIoEAoD,cAAAA,KADU,GACFtD,KAAK,CJpETE,AIoEUwC,CJpET,GIoEa,CJpETtC,AIoEUuC,CJpEnB,EAAY,EIoEE,CAAW,CAACS,KAAK,GAAGD,IAAT,IAAiB,CAA5B,CAAD,CADH,EACqC;AXsCvD,ADCA,AOxImB,AC8BTJ,0BAAAA,IAAI,CAAC7C,CAAD,EAAIE,CAAJ,CAAJ;AP0GV,ADCA,AS9HI,AFXe,AC+BTL,AImEFG,cAAAA,CAFU,GAENiD,IAFM,EAEA,EJnERpD,OAAO,CAACkC,QAAR,CAAiBb,qBAAUC,WAA3B,EAAwC;AP0GlD,ADCA,AS/HI,AFXe,ACgCPa,GDhCV,yBCgCUA,GClBEyB,KDkBM,EAAEzD,CAD4B,MCjBtB,CAACF,KAAD,EAAQE,CAAR,CAHxB;AR+HJ,ADCA,AOxFC,AClBWiC,AIkEJ/B,cAAAA,CAHU,GAGNgD,KAHM,EAGC,GJlEPjB,QAAQ,EAAE/B;AP0GtB,ADCA,ASjII,ADoB8C,2BAAxC;AP6GV,ADCA,AShImCF,ADsBzBA,AI6DQ,wBHnFiBA,CAAC,CDsB1BA,CCxBN,ADwBO;AP0GX,ADCA,ASnII,ADyBME,AI4DQ,oBAIPF,CAAC,IAAIE,CJhENA,AI4DQ,CJ5DP;AP0GX,ADCA,ASpII,AD0BK,AI2DS;AX+ClB,ADCA,AYhDkB;AXgDlB,ADCA,AStII,ADNA,AI2Fc;AXiDlB,ADCA,ASvII,ADNA;AP6IJ,ADCA,ASxII,AGqFc;AXmDlB,ADCA,ASzII,ADNA,AI2Fc,oBAKLJ,KAAK,CAACE,CAAD,CAAL,GAAWoD,KAAX,IAAoBiC,SAAS,IAAI5E,2BAAaC,OALzC;AXoDlB,ADCA,AS1II,ADNA,AI2Fc,yDJzDLV,CAlCT;APgJJ,ADCA,AS3II,AGqFc;AXsDlB,ADCA,AS5II,ADNA,AI2Fc,eH/FC;ARsJnB,ADCA,ASvJmB,ADIf;APmJJ,ADCA,ASxJmB,ADIf,AI2Fc;AXyDlB,ADCA,AQrJI,AI2Fc,qBAMJoF,gBAAgB,CAACxD,aAAjB,CAA+ByC,MAAM,CAACC,cAAtC,EAAsDzC,IAAtD,CAA2D,YAAM;AXoD/E,ADCA,AShJmB0B,ADNf,AIkGM6B,YH5FS7B,IG4FT6B,OHtGS,SGsGO,CAACrD,QAAjB,CAA0Bb,qBAAUG,WAApC,EAAiD;AXoD3D,ADCA,AS3JmB,ADIf,AImGQW,kBAAAA,QAAQ,EAAEhC,CADqC;AXqD3D,ADCA,AS5JmB,ADIf,AIoGQiC,eJxGO,GIwGPA,QAAQ,EAAE/B;AXoDtB,ADCA,AQ7JmB,AIsGwC,iBAAjD;AXuDV,ADCA,AS9JmB,ADAA,AI0GTF,gBAAAA,CAAC;AXoDX,ADCA,AS/JmB,AG2GV,eANK,CANI,kEH1Fd;AR0JJ,ADCA,AS3JI,ADDe2C,YAAAA,SAJA;APgKnB,ADCA,AS5JI,ADLe,AI+FD;AXkElB,ADCA,AS7JI,ADLe,AI+FD;AXmElB,ADCA,AS9JI,AG0Fc;AXoElB,ADCA,AS/JI,ADJA7C,YAAAA,KAAK,GAAGD,OAAO,CAACE,QAAR,EAAR;APmKJ,ADCA,AShKI,ADHA6C,AI6Fc,YJ7FdA,SAAS,CAAC,CAAD,EAAI9C,KAAK,CCIVyD,ADJWtD,MAAN,GAAe,CAAnB,CCIU,ADJnB,ECGA;ARgKJ,ADCA,AYvEkB,oBAcLmD,KAAK,GAAGtD,KAAK,CAACI,CAAD,CAAb,IAAoBmF,SAAS,IAAI5E,2BAAaC,OAdzC;AXuElB,ADCA,ASlKI,ADLe,AI+FD;AXwElB,ADCA,ASnKI,ADLe,AI+FD;AXyElB,ADCA,ASpKI,ADLe,AI+FD,+BHxFN8C,aAAa,EAFrB;ARoKJ,ADCA,AQ1KmB;AP0KnB,ADCA,AStKI,ADLe,AI+FD;AX4ElB,ADCA,ASvKI,ADLe,AI+FD,qBAeJ4B,gBAAgB,CAACxD,aAAjB,CAA+ByC,MAAM,CAACC,cAAtC,EAAsDzC,IAAtD,CAA2D,YAAM;AX8D/E,ADCA,ASxKI,ADLe,AI+GTuD,GJ/GR,aI+GQA,gBAAgB,CAACrD,QAAjB,CAA0Bb,qBAAUG,WAApC,EAAiD;AX8D3D,ADCA,ASzKI,AD0DH,AIiDWW,kBAAAA,QAAQ,EAAEhC,CADqC;AX+D3D,ADCA,AS1KI,AG4GQiC,kBAAAA,QAAQ,EAAE/B;AX8DtB,ADCA,AS3KI,AG0GuD,iBAAjD;AXiEV,ADCA,AS5KI,AG8GMA,eHnHS,CGmHTA,CAAC;AX8DX,ADCA,ASlLmB,AGoHV,eANK,CAfI;AXmFlB,ADCA,ASnLmB;ARmLnB,ADCA,AYrFkB;AXqFlB,ADCA,AShLmBoD,AG0FD,YH1FCA,QALA;ARqLnB,ADCA,AStLmB,AG+FD;AXuFlB,ADCA,ASvLmB;ARuLnB,ADCA,AYzFkB;AXyFlB,ADCA,ASxLIxD,AGqHE,YHrHFA,KAAK,GAAGD,OAAO,CAACE,QAAR,EAAR;ARwLJ,ADCA,ASvLIuD,AGoHE,YHpHFA,MGoHMtD,CAAC,CHpHC,GGoHGE,CAAT,EAAY;AXmElB,ADCA,AYnEQ2C,gBAAAA,IAAI,CAAC7C,CAAD,EAAIE,CAAJ,CAAJ;AXmER,ADCA,AS5LmB,AGyHXkF,gBAAAA,gBAAgB,CAACrD,QAAjB,CAA0Bb,qBAAUC,WAApC,EAAiD;AXmEzD,ADCA,AS7LmB,AG0HTa,kBAAAA,QAAQ,EAAEhC,CADqC;AXoEzD,ADCA,AS9LmB,AG2HTiC,kBAAAA,QAAQ,EAAE/B;AXmEpB,ADCA,AS/LmB,AGyHsC,iBAAjD;AXsER,ADCA,AShMmB,AG6HXF,gBAAAA,CAAC;AXmET,ADCA,ASjMmB,AG8HXE,gBAAAA,CAAC;AXmET,ADCA,ASlMmB,AG+HZ,GH/HL;ARkMF,ADCA,AShJC;ARgJD,ADCA,AYrGkB;AXqGlB,ADCA,AYtGkB;AXsGlB,ADCA;ACAA,ADCA,AYxGkB;AXwGlB,ADCA,AYzGkB,+CAkCPF,CAlCO;AXyGlB,ADCA;ACAA,ADCA,AY3GkB;AX2GlB,ADCA,AY5GkB;AX4GlB,ADCA,AY7GkB;AX6GlB,ADCA,AY9GkB;AX8GlB,ADCA,AY/GkB;AX+GlB,ADCA,AYhHkB;AXgHlB,ADCA,AYjHkB,KAAH;AXiHf,ADCA;ACAA,ADCA,AYnHe,oBAAT2C,SAAS;AXmHf,ADCA,AYpHe;AXoHf,ADCA,AYrHe;AXqHf,ADCA,AYtHe,KAAb;AXsHF,ADCA;ACAA,ADCA,AYnFE,MAAIC,SAAS;AXmFf,ADCA,AYpFe,wEAAG,kBAAgBK,IAAhB,EAAsBC,KAAtB;AXoFlB,ADCA,AYrFkB;AXqFlB,ADCA,AYtFkB;AXsFlB,ADCA,AYvFkB;AXuFlB,ADCA,AYxFkB;AXwFlB,ADCA,AYzFkB;AXyFlB,ADCA,AY1FkB,oBAEVpD,KAAK,CAACG,MAAN,GAAe,CAFL;AX0FlB,ADCA,AY3FkB;AX2FlB,ADCA,AY5FkB;AX4FlB,ADCA,AY7FkB;AX6FlB,ADCA;ACAA,ADCA,AY/FkB;AX+FlB,ADCA,AYhGkB,qBAGE0C,SAAS,CAACM,IAAD,EAAOC,KAAP,CAHX;AXgGlB,ADCA;ACAA,ADCA,AYlGkB;AXkGlB,ADCA,AYhGMC,cAAAA,KAHY;AXmGlB,ADCA;ACAA,ADCA,AYrGkB,oBAIRF,IAAI,GAAGE,KAAK,GAAG,CAJP;AXqGlB,ADCA,AYtGkB;AXsGlB,ADCA,AYvGkB;AXuGlB,ADCA,AYxGkB;AXwGlB,ADCA;ACAA,ADCA,AY1GkB;AX0GlB,ADCA,AY3GkB,qBAMJP,SAAS,CAACK,IAAD,EAAOE,KAAK,GAAG,CAAf,CANL;AX2GlB,ADCA;ACAA,ADCA,AY7GkB;AX6GlB,ADCA,AY9GkB,oBAQRA,KAAK,GAAGD,KARA;AX8GlB,ADCA,AY/GkB;AX+GlB,ADCA,AYhHkB;AXgHlB,ADCA,AYjHkB;AXiHlB,ADCA;ACAA,ADCA,AYnHkB;AXmHlB,ADCA,AYpHkB,qBAUJN,SAAS,CAACO,KAAD,EAAQD,KAAR,CAVL;AXoHlB,ADCA;ACAA,ADCA,AYtHkB;AXsHlB,ADCA,AYvHkB,gDAaPpD,KAbO;AXuHlB,ADCA;ACAA,ADCA,AYzHkB;AXyHlB,ADCA,AY1HkB;AX0HlB,ADCA,AY3HkB;AX2HlB,ADCA,AY5HkB;AX4HlB,ADCA,AY7HkB;AX6HlB,ADCA,AY9HkB;AX8HlB,ADCA,AY/HkB,KAAH;AX+Hf,ADCA;ACAA,ADCA,AYjIe,oBAAT8C,SAAS;AXiIf,ADCA,AYlIe;AXkIf,ADCA,AYnIe;AXmIf,ADCA,AYpIe,KAAb;AXoIF,ADCA;ACAA,ADCA,AYtHE,MAAIU,QAAQ;AXsHd,ADCA,AYvHc,wEAAG;AXuHjB,ADCA,AYxHiB;AXwHjB,ADCA,AYzHiB;AXyHjB,ADCA,AY1HiB;AX0HjB,ADCA,AY3HiB;AX2HjB,ADCA,AY5HiB;AX4HjB,ADCA,AY7HiB,qBACPC,WAAW,EADJ;AX6HjB,ADCA;ACAA,ADCA,AY/HiB;AX+HjB,ADCA,AYhIiB;AXgIjB,ADCA,AYjIiB,qBAEPC,aAAa,EAFN;AXiIjB,ADCA;ACAA,ADCA,AYnIiB;AXmIjB,ADCA,AYpIiB;AXoIjB,ADCA,AYrIiB;AXqIjB,ADCA,AYtIiB;AXsIjB,ADCA,AYvIiB;AXuIjB,ADCA,AYxIiB;AXwIjB,ADCA,AYzIiB,KAAH;AXyId,ADCA;ACAA,ADCA,AY3Ic,oBAARF,QAAQ;AX2Id,ADCA,AY5Ic;AX4Id,ADCA,AY7Ic;AX6Id,ADCA,AY9Ic,KAAZ;AX8IF,ADCA;ACAA,ADCA,AY3IE,MAAIC,WAAW;AX2IjB,ADCA,AY5IiB,wEAAG;AX4IpB,ADCA,AY7IoB;AX6IpB,ADCA,AY9IoB;AX8IpB,ADCA,AY/IoB;AX+IpB,ADCA,AYhJoB;AXgJpB,ADCA,AYjJoB;AXiJpB,ADCA,AYjJQhB,cAAAA,MADY,GACHC,IAAI,CAACC,KAAL,CAAW3C,KAAK,CAACG,MAAN,GAAe,CAA1B,CADG;AXkJpB,ADCA,AYjJaD,cAAAA,CAFO,GAEHuC,MAFG;AXmJpB,ADCA;ACAA,ADCA,AYrJoB;AXqJpB,ADCA,AYtJoB,oBAEKvC,CAAC,IAAI,CAFV;AXsJpB,ADCA,AYvJoB;AXuJpB,ADCA,AYxJoB;AXwJpB,ADCA,AYzJoB;AXyJpB,ADCA;ACAA,ADCA,AY3JoB;AX2JpB,ADCA,AY5JoB,qBAGRyD,cAAc,CAAC3D,KAAD,EAAQE,CAAR,CAHN;AX4JpB,ADCA;ACAA,ADCA,AY9JoB;AX8JpB,ADCA,AY7JiCA,cAAAA,CAAC,EAFd;AX+JpB,ADCA,AYhKoB;AXgKpB,ADCA,AYjKoB;AXiKpB,ADCA;ACAA,ADCA,AYnKoB;AXmKpB,ADCA,AYpKoB;AXoKpB,ADCA,AYrKoB;AXqKpB,ADCA,AYtKoB;AXsKpB,ADCA,AYvKoB;AXuKpB,ADCA,AYxKoB;AXwKpB,ADCA,AYzKoB,KAAH;AXyKjB,ADCA;ACAA,ADCA,AY3KiB,oBAAXuD,WAAW;AX2KjB,ADCA,AY5KiB;AX4KjB,ADCA,AY7KiB;AX6KjB,ADCA,AY9KiB,KAAf;AX8KF,ADCA;ACAA,ADCA,AYzKE,MAAIC,aAAa;AXyKnB,ADCA,AY1KmB,wEAAG;AX0KtB,ADCA,AY3KsB;AX2KtB,ADCA,AY5KsB;AX4KtB,ADCA,AY7KsB;AX6KtB,ADCA,AY9KsB;AX8KtB,ADCA,AY/KsB;AX+KtB,ADCA,AY/KQM,cAAAA,aADc,sBACMhE,KADN;AXgLtB,ADCA,AY/KaE,cAAAA,CAFS,GAEL,CAFK;AXiLtB,ADCA;ACAA,ADCA,AYnLsB;AXmLtB,ADCA,AYpLsB,oBAEF8D,aAAa,CAAC7D,MAAd,GAAuB,CAFrB;AXoLtB,ADCA,AYrLsB;AXqLtB,ADCA,AYtLsB;AXsLtB,ADCA,AYvLsB;AXuLtB,ADCA;ACAA,ADCA,AYtLMH,cAAAA,KAAK,CAACE,CAAD,CAAL,GAAW8D,aAAa,CAAC,CAAD,CAAxB,CAHgB,CAGa;AXsLnC,ADCA;ACAA,ADCA,AYvLMA,cAAAA,aAAa,CAAC,CAAD,CAAb,GAAmBA,aAAa,CAACA,aAAa,CAAC7D,MAAd,GAAuB,CAAxB,CAAhC,CAJgB,CAI4C;AXuLlE,ADCA;ACAA,ADCA,AYxLM6D,cAAAA,aAAa,CAACC,GAAd;AXwLN,ADCA,AYxLMN,cAAAA,cAAc,CAACK,aAAD,EAAgB,CAAhB,CAAd;AXwLN,ADCA,AY/LsB;AX+LtB,ADCA,AYhMsB,qBAOVsB,gBAAgB,CAACxD,aAAjB,CAA+ByC,MAAM,CAACC,cAAtC,CAPU;AXgMtB,ADCA;ACAA,ADCA,AYlMsB;AXkMtB,ADCA,AYjM8CtE,cAAAA,CAAC,EAFzB;AXmMtB,ADCA,AYpMsB;AXoMtB,ADCA,AYrMsB;AXqMtB,ADCA;ACAA,ADCA,AYvMsB;AXuMtB,ADCA,AYxMsB;AXwMtB,ADCA,AYzMsB;AXyMtB,ADCA,AY1MsB;AX0MtB,ADCA,AY3MsB;AX2MtB,ADCA,AY5MsB;AX4MtB,ADCA,AY7MsB,KAAH;AX6MnB,ADCA;ACAA,ADCA,AY/MmB,oBAAbwD,aAAa;AX+MnB,ADCA,AYhNmB;AXgNnB,ADCA,AYjNmB;AXiNnB,ADCA,AYlNmB,KAAjB;AXkNF,ADCA;ACAA,ADCA,AYxME,MAAIC,cAAc;AXwMpB,ADCA,AYzMoB,wEAAG,kBAAgB3D,KAAhB,EAAuBE,CAAvB;AXyMvB,ADCA,AY1MuB;AX0MvB,ADCA;ACAA,ADCA,AY5MuB;AX4MvB,ADCA,AY7MuB;AX6MvB,ADCA,AY9MuB;AX8MvB,ADCA,AY/MuB;AX+MvB,ADCA,AY/MQ0D,cAAAA,cADe,GACE,CAAC1D,CAAC,GAAG,CAAL,IAAU,CAAV,GAAc,CADhB;AXgNvB,ADCA,AY/MQ2D,cAAAA,cAFe,GAEE,CAAC3D,CAAC,GAAG,CAAL,IAAU,CAFZ;AXiNvB,ADCA,AY/MQ4D,cAAAA,aAHe,GAIjB9D,KAAK,CAAC4D,cAAD,CAAL,GAAwB5D,KAAK,CAAC6D,cAAD,CAA7B,GACID,cADJ,GAEIC,cANa,EAMG;AX4M1B,ADCA;ACAA,ADCA,AYpNuB,oBAQf7D,KAAK,CAAC8D,aAAD,CAAL,IAAwBC,SAAxB,IAAqC/D,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAAC8D,aAAD,CARtC;AXoNvB,ADCA,AYrNuB;AXqNvB,ADCA,AYtNuB;AXsNvB,ADCA,AYvNuB;AXuNvB,ADCA;ACAA,ADCA,AYzNuB,sBASkB,CAAC9D,KAAK,CAAC8D,aAAD,CAAN,EAAuB9D,KAAK,CAACE,CAAD,CAA5B,CATlB;AXyNvB,ADCA,AYjNOF,cAAAA,KAAK,CAACE,CAAD,CATW;AX0NvB,ADCA,AYlNiBF,cAAAA,KAAK,CAAC8D,aAAD,CATC;AX2NvB,ADCA,AYlNMwB,cAAAA,gBAAgB,CAACrD,QAAjB,CAA0Bb,qBAAUC,WAApC,EAAiD;AXkNvD,ADCA,AYlNQa,gBAAAA,QAAQ,EAAE4B,aADqC;AXmNvD,ADCA,AYlNQ3B,gBAAAA,QAAQ,EAAEjC;AXkNlB,ADCA,AYrNuD,eAAjD;AXqNN,ADCA,AYlNMyD,cAAAA,cAAc,CAAC3D,KAAD,EAAQ8D,aAAR,CAAd;AXkNN,ADCA,AYjOuB;AXiOvB,ADCA,AYlOuB,qBAeXwB,gBAAgB,CAACxD,aAAjB,CAA+ByC,MAAM,CAACE,QAAtC,CAfW;AXkOvB,ADCA;ACAA,ADCA,AYpOuB;AXoOvB,ADCA,AYrOuB;AXqOvB,ADCA,AYtOuB;AXsOvB,ADCA,AYvOuB;AXuOvB,ADCA,AYxOuB;AXwOvB,ADCA,AYzOuB;AXyOvB,ADCA,AY1OuB,KAAH;AX0OpB,ADCA;ACAA,ADCA,AY5OoB,oBAAdd,cAAc;AX4OpB,ADCA,AY7OoB;AX6OpB,ADCA,AY9OoB;AX8OpB,ADCA,AY/OoB,KAAlB;AX+OF,ADCA;ACAA,ADCA,AY9NE,MAAIZ,IAAI,GAAG,SAAPA,IAAO,CAAUC,SAAV,EAAqBC,UAArB,EAAiC;AX8N9C,ADCA,AY9NI,QAAIC,IAAI,GAAGlD,KAAK,CAACgD,SAAD,CAAhB;AX8NJ,ADCA,AY9NIhD,IAAAA,KAAK,CAACgD,SAAD,CAAL,GAAmBhD,KAAK,CAACiD,UAAD,CAAxB;AX8NJ,ADCA,AY9NIjD,IAAAA,KAAK,CAACiD,UAAD,CAAL,GAAoBC,IAApB;AX8NJ,ADCA,AY9NG,GAJD;AXkOF,ADCA;ACAA,ADCA,AY9NEoC,EAAAA,gBAAgB,CAACxD,aAAjB;AX8NF,ADCA,AY/NE,wEAAiC,kBAAgB0E,YAAhB;AX+NnC,ADCA,AYhOmC;AXgOnC,ADCA,AYjOmC;AXiOnC,ADCA,AYlOmC;AXkOnC,ADCA,AYnOmC;AXmOnC,ADCA,AYpOmC;AXoOnC,ADCA,AYrOmC,qBACzB,IAAIC,OAAJ,CAAY,UAACnE,OAAD;AXoOtB,ADCA,AYrOsB,uBAAaoE,UAAU,CAACpE,OAAD,EAAUkE,YAAV,CAAvB;AXqOtB,ADCA,AYtOsB,eAAZ,CADyB;AXuOnC,ADCA;ACAA,ADCA,AYzOmC;AXyOnC,ADCA,AY1OmC;AX0OnC,ADCA,AY3OmC;AX2OnC,ADCA,AY5OmC;AX4OnC,ADCA,AY7OmC;AX6OnC,ADCA,AY9OmC;AX8OnC,ADCA,AY/OmC,KAAjC;AX+OF,ADCA;ACAA,ADCA,AYjPE;AXiPF,ADCA,AYlPE;AXkPF,ADCA,AYnPE;AXmPF,ADCA,AYpPE;AXoPF,ADCA;ACAA,ADCA,AYlPElB,EAAAA,gBAAgB,CAAChF,eAAjB;AXkPF,ADCA,AYnPE,wEAAmC,kBAAgBqG,UAAhB,EAA4BC,WAA5B;AXmPrC,ADCA,AYpPqC;AXoPrC,ADCA;ACAA,ADCA,AYtPqC;AXsPrC,ADCA,AYvPqC;AXuPrC,ADCA,AYxPqC;AXwPrC,ADCA,AYzPqC;AXyPrC,ADCA,AY1PqC,oBAC7BrB,SAAS,IAAI5E,2BAAaC,OADG;AX0PrC,ADCA,AY3PqC;AX2PrC,ADCA,AY5PqC;AX4PrC,ADCA,AY7PqC;AX6PrC,ADCA;ACAA,ADCA,AY/PqC;AX+PrC,ADCA,AYhQqC,qBAEzB0E,gBAAgB,CAACxD,aAAjB,CAA+ByC,MAAM,CAACE,QAAtC,CAFyB;AXgQrC,ADCA;ACAA,ADCA,AYlQqC;AXkQrC,ADCA,AYnQqC,uBAGW,CACxCzE,KAAK,CAAC4G,WAAD,CADmC,EAExC5G,KAAK,CAAC2G,UAAD,CAFmC,CAHX;AXmQrC,ADCA,AYjQO3G,cAAAA,KAAK,CAAC2G,UAAD,CAHyB;AXoQrC,ADCA,AYlQ0B3G,cAAAA,KAAK,CAAC4G,WAAD,CAHM;AXqQrC,ADCA,AY/PMtB,cAAAA,gBAAgB,CAACrD,QAAjB,CAA0Bb,qBAAUC,WAApC,EAAiD;AX+PvD,ADCA,AY/PQa,gBAAAA,QAAQ,EAAEyE,UADqC;AXgQvD,ADCA,AY/PQxE,gBAAAA,QAAQ,EAAEyE;AX+PlB,ADCA,AYlQuD,eAAjD;AXkQN,ADCA;ACAA,ADCA,AY3QqC;AX2QrC,ADCA,AY5QqC;AX4QrC,ADCA,AY7QqC;AX6QrC,ADCA,AY9QqC;AX8QrC,ADCA,AY/QqC;AX+QrC,ADCA,AYhRqC;AXgRrC,ADCA,AYjRqC,KAAnC;AXiRF,ADCA;ACAA,ADCA,AYnRE;AXmRF,ADCA,AYpRE;AXoRF,ADCA,AYrRE;AXqRF,ADCA,AYtRE;AXsRF,ADCA;ACAA,ADCA,AY1QEtB,EAAAA,gBAAgB,CAACjF,kBAAjB;AX0QF,ADCA,AY3QE,yEAAsC,kBACpCsG,UADoC,EAEpCC,WAFoC;AX2QxC,ADCA,AY5QwC;AX4QxC,ADCA,AY7QwC;AX6QxC,ADCA,AY9QwC;AX8QxC,ADCA,AY/QwC;AX+QxC,ADCA,AYhRwC,oBAIhCrB,SAAS,IAAI5E,2BAAaC,OAJM;AXgRxC,ADCA,AYjRwC;AXiRxC,ADCA,AYlRwC;AXkRxC,ADCA,AYnRwC;AXmRxC,ADCA;ACAA,ADCA,AYrRwC;AXqRxC,ADCA,AYtRwC,qBAK5B0E,gBAAgB,CAACxD,aAAjB,CAA+ByC,MAAM,CAACC,cAAtC,CAL4B;AXsRxC,ADCA;ACAA,ADCA,AYxRwC;AXwRxC,ADCA,AYnRMc,cAAAA,gBAAgB,CAACrD,QAAjB,CAA0Bb,qBAAUG,WAApC,EAAiD;AXmRvD,ADCA,AYnRQW,gBAAAA,QAAQ,EAAEyE,UADqC;AXoRvD,ADCA,AYnRQxE,gBAAAA,QAAQ,EAAEyE;AXmRlB,ADCA,AYtRuD,eAAjD;AXsRN,ADCA,AY7RwC,gDAU3B5G,KAAK,CAAC2G,UAAD,CAAL,GAAoB3G,KAAK,CAAC4G,WAAD,CAVE;AX6RxC,ADCA;ACAA,ADCA,AY/RwC;AX+RxC,ADCA,AYhSwC;AXgSxC,ADCA,AYjSwC;AXiSxC,ADCA,AYlSwC;AXkSxC,ADCA,AYnSwC;AXmSxC,ADCA,AYpSwC;AXoSxC,ADCA,AYrSwC,KAAtC;AXqSF,ADCA;ACAA,ADCA,AYvSE;AXuSF,ADCA,AYxSE;AXwSF,ADCA,AYzSE;AXyfile":"app.c0e5f9db.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","//! moment.js\n//! version : 2.29.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key;\n                for (i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i;\n            for (i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                    matched,\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ) {\n                    return p1 || p2 || p3 || p4;\n                })\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n            '_'\n        ),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (\n        input,\n        array,\n        config,\n        token\n    ) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) {\n            getParsingFlags(config).era = era;\n        } else {\n            getParsingFlags(config).invalidEra = input;\n        }\n    });\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.1';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","export function BubbleSorter() {\r\n  this.sortArray = async function (context) {\r\n    let array = context.getArray();\r\n    for (let i = 0; i < array.length; i++) {\r\n      for (let j = 0; j < array.length - i - 1; j++) {\r\n        if (await context.compareAndDispatch(j, j + 1))\r\n          await context.swapAndDispatch(j, j + 1);\r\n      }\r\n    }\r\n  };\r\n}\r\n","export function InsertionSorter() {\r\n  this.sortArray = async function () {\r\n    console.log(\"1\");\r\n    let array = this.getArray();\r\n    //Taking each element to the left until it starts to fit comparer\r\n\r\n    for (let i = 1; i < array.length; i++) {\r\n      let indexOfEle = i;\r\n      while (\r\n        indexOfEle > 0 &&\r\n        (await this.compareAndDispatch(indexOfEle, indexOfEle - 1))\r\n      ) {\r\n        await this.swapAndDispatch(indexOfEle - 1, indexOfEle);\r\n        indexOfEle--;\r\n      }\r\n    }\r\n  };\r\n}\r\n","export const sortingState = {\r\n  sorting: \"SORTING\",\r\n  stopped: \"STOPPED\",\r\n};\r\n","export function SelectionSorter() {\r\n  let array;\r\n  this.sortArray = async function () {\r\n    array = this.getArray();\r\n    for (let i = 0; i < array.length; i++) {\r\n      let res = await findMaxValue.call(this, i);\r\n\r\n      await this.swapAndDispatch(i, res);\r\n    }\r\n  };\r\n  let findMaxValue = async function (startIndex) {\r\n    let maxIndex = startIndex;\r\n    for (let i = startIndex; i < array.length; i++) {\r\n      if (await this.compareAndDispatch(i, maxIndex)) {\r\n        maxIndex = i;\r\n      }\r\n    }\r\n    return maxIndex;\r\n  };\r\n}\r\n","export const sortEvent = {\r\n  ItemSwapped: \"ITEMS_SORTED\",\r\n  SortingFinished: \"SORTING_FINISHED\",\r\n  ItemScanned: \"ITEM_SCANNED\",\r\n};\r\n","import { sortEvent } from \"../core/constants/sortEvent\";\r\nimport { sortingState } from \"../core/constants/sortingState\";\r\n\r\nexport function MergeSorter(context) {\r\n  let array;\r\n  this.sortArray = async function () {\r\n    array = context.getArray();\r\n    mergeSort(array, 0);\r\n\r\n    async function mergeSort(splittedArray, startIndex) {\r\n      console.log(splittedArray);\r\n      //recursion exit if array contains only one value\r\n      if (splittedArray.length <= 1) return splittedArray;\r\n      let middle = Math.floor(splittedArray.length / 2);\r\n      let leftArr = splittedArray.slice(0, middle);\r\n      let rightArr = splittedArray.slice(middle);\r\n      return mergeArrays(\r\n        await mergeSort(leftArr, startIndex),\r\n        await mergeSort(rightArr, startIndex + middle),\r\n        startIndex\r\n      );\r\n    }\r\n\r\n    async function mergeArrays(leftArr, rightArr, startIndex) {\r\n      let mergedArray = [];\r\n      let i = 0;\r\n      let j = 0;\r\n      //Two finger method\r\n      while (i < leftArr.length && j < rightArr.length) {\r\n        //setting pause before each iteration\r\n        //Comparator usage\r\n        await context.sleepDuration(100).then(() => {\r\n          if (leftArr[i] < rightArr[j]) mergedArray.push(leftArr[i++]);\r\n          else mergedArray.push(rightArr[j++]);\r\n          context.dispatch(sortEvent.ItemScanned, {\r\n            indexOne: startIndex + mergedArray.length,\r\n            indexTwo: startIndex,\r\n          });\r\n        });\r\n      }\r\n      mergedArray = mergedArray.concat(\r\n        leftArr.slice(i).concat(rightArr.slice(j))\r\n      );\r\n      for (\r\n        let i = 0;\r\n        i < mergedArray.length && context.state == sortingState.sorting;\r\n        i++\r\n      ) {\r\n        context.sleepDuration(100).then((resolve) => {\r\n          array[i + startIndex] = mergedArray[i];\r\n          context.dispatch(sortEvent.ItemSwapped, { indexOne: i + startIndex });\r\n        });\r\n      }\r\n      return mergedArray;\r\n    }\r\n  };\r\n}\r\n","import { sortEvent } from \"../core/constants/sortEvent\";\r\nimport { sortingState } from \"../core/constants/sortingState\";\r\n\r\nexport function QuickSorter(context) {\r\n  let array;\r\n\r\n  this.sortArray = async function () {\r\n    array = context.getArray();\r\n    quickSort(0, array.length - 1);\r\n\r\n    async function partition(left, right) {\r\n      let pivot = array[Math.floor((right + left) / 2)]; //middle element\r\n      let i = left; //left pointer\r\n      let j = right; //right pointer\r\n      while (i <= j) {\r\n        while (array[i] < pivot && context.state == sortingState.sorting) {\r\n          await context.sleepDuration(20).then(() => {\r\n            context.dispatch(sortEvent.ItemScanned, {\r\n              indexOne: i,\r\n              indexTwo: j,\r\n            });\r\n            i++;\r\n          });\r\n        }\r\n        while (pivot < array[j] && context.state == sortingState.sorting) {\r\n          await context.sleepDuration(20).then(() => {\r\n            context.dispatch(sortEvent.ItemScanned, {\r\n              indexOne: i,\r\n              indexTwo: j,\r\n            });\r\n            j--;\r\n          });\r\n        }\r\n        //console.log(i + \" : \" + j);\r\n        if (i <= j) {\r\n          swap(i, j);\r\n          context.dispatch(sortEvent.ItemSwapped, {\r\n            indexOne: i,\r\n            indexTwo: j,\r\n          });\r\n          i++;\r\n          j--;\r\n        }\r\n      }\r\n      return i;\r\n    }\r\n\r\n    async function quickSort(left, right) {\r\n      let index;\r\n      if (array.length > 1) {\r\n        index = await partition(left, right); //index returned from partition\r\n        if (left < index - 1) {\r\n          //more elements on the left side of the pivot\r\n          await quickSort(left, index - 1);\r\n        }\r\n        if (index < right) {\r\n          //more elements on the right side of the pivot\r\n          await quickSort(index, right);\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n\r\n    function swap(leftIndex, rightIndex) {\r\n      let temp = array[leftIndex];\r\n      array[leftIndex] = array[rightIndex];\r\n      array[rightIndex] = temp;\r\n    }\r\n  };\r\n}\r\n","import { sortEvent } from \"../core/constants/sortEvent\";\r\nimport { sortingState } from \"../core/constants/sortingState\";\r\n\r\nexport function HeapSorter(context) {\r\n  let array;\r\n\r\n  this.sortArray = async function () {\r\n    array = context.getArray();\r\n\r\n    heapSort();\r\n\r\n    async function heapSort() {\r\n      await makeMaxHeap();\r\n      await applyHeapSort();\r\n    }\r\n\r\n    async function makeMaxHeap() {\r\n      let middle = Math.floor(array.length / 2);\r\n      for (let i = middle; i >= 0; i--) {\r\n        await pushToMaxArray(array, i);\r\n      }\r\n    }\r\n\r\n    async function applyHeapSort() {\r\n      let heapContainer = [...array];\r\n      for (let i = 0; heapContainer.length > 0; i++) {\r\n        array[i] = heapContainer[0]; //Extracting max\r\n        heapContainer[0] = heapContainer[heapContainer.length - 1]; //swap small element to the top\r\n        heapContainer.pop();\r\n        pushToMaxArray(heapContainer, 0);\r\n        await context.sleepDuration(20);\r\n        context.dispatch(sortEvent.ItemSwapped, { indexOne: i });\r\n      }\r\n    }\r\n\r\n    async function pushToMaxArray(array, i) {\r\n      let leftChildIndex = (i + 1) * 2 - 1;\r\n      let rightChildInex = (i + 1) * 2;\r\n      let maxChildIndex =\r\n        array[leftChildIndex] > array[rightChildInex]\r\n          ? leftChildIndex\r\n          : rightChildInex; //max of child if element exists, undefined if element has no child\r\n\r\n      if (\r\n        array[maxChildIndex] != undefined &&\r\n        array[i] < array[maxChildIndex]\r\n      ) {\r\n        [array[i], array[maxChildIndex]] = [array[maxChildIndex], array[i]];\r\n        context.dispatch(sortEvent.ItemSwapped, {\r\n          indexOne: maxChildIndex,\r\n          indexTwo: i,\r\n        });\r\n        pushToMaxArray(array, maxChildIndex);\r\n        await context.sleepDuration(100);\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { BubbleSorter } from \"./BubbleSorter\";\r\nimport { InsertionSorter } from \"./InsertionSorter\";\r\nimport { sortingState } from \"../core/constants/sortingState\";\r\nimport { SelectionSorter } from \"./SelectionSorter\";\r\nimport { MergeSorter } from \"./MergeSorter\";\r\nimport { QuickSorter } from \"./QuickSorter\";\r\nimport { HeapSorter } from \"./HeapSorter\";\r\nimport { sortEvent } from \"../core/constants/sortEvent\";\r\n\r\nexport function SorterFactory(context) {\r\n  this.applySort = async function (currentSortName) {\r\n    let sortResult;\r\n    context.state = sortingState.sorting;\r\n    let sorter;\r\n    switch (currentSortName) {\r\n      case \"Bubble\":\r\n        sorter = new BubbleSorter(context);\r\n        break;\r\n      case \"Insertion\":\r\n        sorter = new InsertionSorter();\r\n        break;\r\n      case \"Selection\":\r\n        sorter = new SelectionSorter();\r\n        break;\r\n      case \"Merge\":\r\n        sorter = new MergeSorter(context);\r\n        break;\r\n      case \"Quick\":\r\n        sorter = new QuickSorter(context);\r\n      case \"Heap\":\r\n        sorter = new HeapSorter(context);\r\n    }\r\n    sortResult = await sorter.sortArray.call(context);\r\n    console.log(sortResult);\r\n    // sortResult.then(() => context.dispatch(sortEvent.SortingFinished, {}));\r\n    return sortResult;\r\n  };\r\n}\r\n","import { sortingState } from \"./constants/sortingState\";\r\n\r\nexport function BubbleSorter() {\r\n  this.sortArray = async function () {  \r\n    let array = this.getArray();\r\n    for (let i = 0; i < array.length; i++) {\r\n      for (let j = 0; j < array.length - i - 1; j++) {\r\n        if (this.state == sortingState.sorting) {\r\n          if (await this.compareAndDispatch(j, j + 1))\r\n            await this.swapAndDispatch(j, j + 1);\r\n        }\r\n      }\r\n    }\r\n    console.log(array);\r\n  };\r\n}\r\n","import { max } from \"moment\";\r\nimport { SorterFactory } from \"../SortingAlgorithms/SorterFactory\";\r\nimport { sortEvent } from \"./constants/sortEvent\";\r\nimport { sortingState } from \"./constants/sortingState\";\r\nimport { BubbleSorter } from \"./Sorter\";\r\n\r\nconst config = {\r\n  ComparisonTime: 20,\r\n  SwapTime: 100,\r\n};\r\n\r\nexport function SortManager(n, sortName) {\r\n  let getRandomValue = function (min, max) {\r\n    return Math.round(Math.random() * (max - min) + min);\r\n  };\r\n  let initArray = function (size) {\r\n    let array = new Array(size);\r\n    for (let i = 0; i < size; i++) {\r\n      array[i] = getRandomValue(10, 500);\r\n    }\r\n    return array;\r\n  };\r\n  let array = initArray(n);\r\n  let events = {};\r\n  let protectedMethods = {};\r\n  let sortState = sortingState.stopped;\r\n  let currentSortName = sortName;\r\n\r\n  this.getArray = function () {\r\n    return array;\r\n  };\r\n\r\n  this.setCurrentSort = function (sortName) {\r\n    currentSortName = sortName;\r\n  };\r\n\r\n  this.remakeArray = function (newSize) {\r\n    array = initArray(newSize);\r\n  };\r\n\r\n  Object.defineProperty(this, \"size\", {\r\n    get: function () {\r\n      return array.length;\r\n    },\r\n    set: function (value) {\r\n      this.array = initArray(value);\r\n    },\r\n  });\r\n\r\n  this.addEventListener = function (eventName, callback) {\r\n    events[eventName] = callback;\r\n  };\r\n\r\n  this.removeEventListener = function (eventName) {\r\n    delete events[eventName];\r\n  };\r\n\r\n  protectedMethods.dispatch = function (eventName, params) {\r\n    const callback = events[eventName];\r\n    if (callback) {\r\n      callback(params);\r\n    }\r\n  };\r\n\r\n  Object.defineProperty(this, \"state\", {\r\n    get: function () {\r\n      return sortState;\r\n    },\r\n    set: function (value) {\r\n      sortState = value;\r\n    },\r\n  });\r\n\r\n  this.stopSorting = function () {\r\n    sortState = sortingState.stopped;\r\n  };\r\n\r\n  this.applySort = function () {\r\n    let sorter = new SorterFactory(Object.assign(this, protectedMethods));\r\n    let sortResult;\r\n    this.state = sortingState.sorting;\r\n    let ctx = new BubbleSorter();\r\n    switch (currentSortName) {\r\n      // case \"Merge\":\r\n      //   sortResult = mergeSort(array, 0);\r\n      //   break;\r\n      // case \"Quick\":\r\n      //   sortResult = quickSort(0, array.length - 1);\r\n      //   break;\r\n      // case \"Heap\":\r\n      //   sortResult = heapSort();\r\n      //   break;\r\n      default:\r\n        sorter.applySort(currentSortName);\r\n        break;\r\n    }\r\n    // sortResult.then(() =>\r\n    //   protectedMethods.dispatch(sortEvent.SortingFinished, {})\r\n    // );\r\n  };\r\n\r\n  let partition = async function (left, right) {\r\n    let pivot = array[Math.floor((right + left) / 2)]; //middle element\r\n    let i = left; //left pointer\r\n    let j = right; //right pointer\r\n    while (i <= j) {\r\n      while (array[i] < pivot && sortState == sortingState.sorting) {\r\n        await protectedMethods.sleepDuration(config.ComparisonTime).then(() => {\r\n          protectedMethods.dispatch(sortEvent.ItemScanned, {\r\n            indexOne: i,\r\n            indexTwo: j,\r\n          });\r\n          i++;\r\n        });\r\n      }\r\n      while (pivot < array[j] && sortState == sortingState.sorting) {\r\n        await protectedMethods.sleepDuration(config.ComparisonTime).then(() => {\r\n          protectedMethods.dispatch(sortEvent.ItemScanned, {\r\n            indexOne: i,\r\n            indexTwo: j,\r\n          });\r\n          j--;\r\n        });\r\n      }\r\n      //console.log(i + \" : \" + j);\r\n      if (i <= j) {\r\n        swap(i, j);\r\n        protectedMethods.dispatch(sortEvent.ItemSwapped, {\r\n          indexOne: i,\r\n          indexTwo: j,\r\n        });\r\n        i++;\r\n        j--;\r\n      }\r\n    }\r\n    return i;\r\n  };\r\n\r\n  let quickSort = async function (left, right) {\r\n    let index;\r\n    if (array.length > 1) {\r\n      index = await partition(left, right); //index returned from partition\r\n      if (left < index - 1) {\r\n        //more elements on the left side of the pivot\r\n        await quickSort(left, index - 1);\r\n      }\r\n      if (index < right) {\r\n        //more elements on the right side of the pivot\r\n        await quickSort(index, right);\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  let heapSort = async function () {\r\n    await makeMaxHeap();\r\n    await applyHeapSort();\r\n  };\r\n\r\n  let makeMaxHeap = async function () {\r\n    let middle = Math.floor(array.length / 2);\r\n    for (let i = middle; i >= 0; i--) {\r\n      await pushToMaxArray(array, i);\r\n    }\r\n  };\r\n\r\n  let applyHeapSort = async function () {\r\n    let heapContainer = [...array];\r\n    for (let i = 0; heapContainer.length > 0; i++) {\r\n      array[i] = heapContainer[0]; //Extracting max\r\n      heapContainer[0] = heapContainer[heapContainer.length - 1]; //swap small element to the top\r\n      heapContainer.pop();\r\n      pushToMaxArray(heapContainer, 0);\r\n      await protectedMethods.sleepDuration(config.ComparisonTime);\r\n      // dispatch(sortEvent.ItemSwapped, { indexOne: i });\r\n    }\r\n  };\r\n\r\n  let pushToMaxArray = async function (array, i) {\r\n    let leftChildIndex = (i + 1) * 2 - 1;\r\n    let rightChildInex = (i + 1) * 2;\r\n    let maxChildIndex =\r\n      array[leftChildIndex] > array[rightChildInex]\r\n        ? leftChildIndex\r\n        : rightChildInex; //max of child if element exists, undefined if element has no child\r\n\r\n    if (array[maxChildIndex] != undefined && array[i] < array[maxChildIndex]) {\r\n      [array[i], array[maxChildIndex]] = [array[maxChildIndex], array[i]];\r\n      protectedMethods.dispatch(sortEvent.ItemSwapped, {\r\n        indexOne: maxChildIndex,\r\n        indexTwo: i,\r\n      });\r\n      pushToMaxArray(array, maxChildIndex);\r\n      await protectedMethods.sleepDuration(config.SwapTime);\r\n    }\r\n  };\r\n\r\n  let swap = function (leftIndex, rightIndex) {\r\n    let temp = array[leftIndex];\r\n    array[leftIndex] = array[rightIndex];\r\n    array[rightIndex] = temp;\r\n  };\r\n\r\n  protectedMethods.sleepDuration = async function (durationTime) {\r\n    await new Promise((resolve) => setTimeout(resolve, durationTime));\r\n  };\r\n\r\n  protectedMethods.swapAndDispatch = async function (firstIndex, secondIndex) {\r\n    if (sortState == sortingState.sorting) {\r\n      await protectedMethods.sleepDuration(config.SwapTime);\r\n      [array[firstIndex], array[secondIndex]] = [\r\n        array[secondIndex],\r\n        array[firstIndex],\r\n      ];\r\n      protectedMethods.dispatch(sortEvent.ItemSwapped, {\r\n        indexOne: firstIndex,\r\n        indexTwo: secondIndex,\r\n      });\r\n    }\r\n  };\r\n\r\n  protectedMethods.compareAndDispatch = async function (\r\n    firstIndex,\r\n    secondIndex\r\n  ) {\r\n    if (sortState == sortingState.sorting) {\r\n      await protectedMethods.sleepDuration(config.ComparisonTime);\r\n      protectedMethods.dispatch(sortEvent.ItemScanned, {\r\n        indexOne: firstIndex,\r\n        indexTwo: secondIndex,\r\n      });\r\n      return array[firstIndex] > array[secondIndex];\r\n    }\r\n  };\r\n}\r\n","export const TimerEvents = {\r\n  tick: \"TICK\",\r\n};\r\n\r\nexport function Timer() {\r\n  let interval;\r\n  const tickRate = 1000 / 20;\r\n  let elapsedTime;\r\n  let events = {};\r\n\r\n  this.start = function () {\r\n    elapsedTime = 0;\r\n    defineInterval();\r\n  };\r\n\r\n  let defineInterval = function () {\r\n    interval = setInterval(() => {\r\n      dispatch(TimerEvents.tick, {\r\n        elapsedTime: (elapsedTime += tickRate),\r\n      });\r\n    }, tickRate);\r\n  };\r\n\r\n  this.stop = function () {\r\n    clearInterval(interval);\r\n  };\r\n\r\n  this.addEventListener = function (eventName, callback) {\r\n    events[eventName] = callback;\r\n  };\r\n\r\n  this.removeEventListener = function (eventName) {\r\n    delete events[eventName];\r\n  };\r\n\r\n  let dispatch = function (eventName, params) {\r\n    let callback = events[eventName];\r\n    if (callback) callback(params);\r\n  };\r\n}\r\n","import { Timer, TimerEvents } from \"./timer\";\r\n\r\nexport const colors = {\r\n  unsorted: \"cadetblue\",\r\n  sorted: \"green\",\r\n  swapped: \"DeepPink\",\r\n  scanned: \"gray\",\r\n};\r\n\r\nconst elementIDs = {\r\n  COLUMN_CONTAINER: \"visualizer\",\r\n  TIMER_VALUE: \"timerValue\",\r\n  SWAP_VALUE: \"shiftsValue\",\r\n  COMPARATIONS_VALUE: \"comparisonsValue\",\r\n  SORT_LIST: \"sortList\",\r\n  ACTIVE_SORT_ALGO: \"active\",\r\n  NEW_ARRAY_BUTTON: \"newArray\",\r\n  ARRAY_SIZE_SLIDER: \"slider\",\r\n  START_SORT_BUTTON: \"sortButton\",\r\n};\r\n\r\nexport function Visualizer() {\r\n  let columnContainer = document.getElementById(elementIDs.COLUMN_CONTAINER);\r\n  let timerValue = document.getElementById(elementIDs.TIMER_VALUE);\r\n  let swapValue = document.getElementById(elementIDs.SWAP_VALUE);\r\n  let compValue = document.getElementById(elementIDs.COMPARATIONS_VALUE);\r\n  let columns;\r\n  let columnWidth;\r\n  let shifts = 0;\r\n  let comp = 0;\r\n\r\n  this.sortList = document.getElementById(elementIDs.SORT_LIST);\r\n  this.currentSort = document.getElementById(elementIDs.ACTIVE_SORT_ALGO);\r\n  this.newArrayButton = document.getElementById(elementIDs.NEW_ARRAY_BUTTON);\r\n  this.slider = document.getElementById(elementIDs.ARRAY_SIZE_SLIDER);\r\n  this.sortButton = document.getElementById(elementIDs.START_SORT_BUTTON);\r\n  this.timer = new Timer();\r\n  this.timer.addEventListener(TimerEvents.tick, (params) => {\r\n    timerValue.innerText = `${Math.round(params.elapsedTime / 1000)}s ${\r\n      params.elapsedTime % 1000\r\n    }ms`;\r\n  });\r\n\r\n  this.resetStats = function () {\r\n    shifts = 0;\r\n    swapValue.innerText = \"0\";\r\n    timerValue.innerText = \"0s 0ms\";\r\n    comp = 0;\r\n    compValue.innerText = \"0\";\r\n  };\r\n  this.increaseSwapCounter = function () {\r\n    swapValue.innerText = (++shifts).toString();\r\n  };\r\n\r\n  this.updateComparisons = function () {\r\n    compValue.innerText = (++comp).toString();\r\n  };\r\n\r\n  this.updateVisual = function (array, indexOfHighlightedElement, color) {\r\n    defineColumnNumber();\r\n    defineColumnWidth(array.length);\r\n    for (let i = 0; i < array.length; i++) {\r\n      setColumnStyle(array, i);\r\n    }\r\n    if (\r\n      indexOfHighlightedElement.indexTwo < array.length &&\r\n      indexOfHighlightedElement.indexTwo > 0\r\n    )\r\n      columns[indexOfHighlightedElement.indexTwo].style.backgroundColor = color;\r\n    if (\r\n      indexOfHighlightedElement.indexOne < array.length &&\r\n      indexOfHighlightedElement.indexOne > 0\r\n    )\r\n      columns[indexOfHighlightedElement.indexOne].style.backgroundColor = color;\r\n  };\r\n\r\n  let defineColumnNumber = function () {\r\n    columns = columnContainer.childNodes;\r\n  };\r\n\r\n  let defineColumnWidth = function (arrayLength) {\r\n    columnWidth = columnContainer.offsetWidth / arrayLength;\r\n  };\r\n\r\n  let setColumnStyle = function (array, columnIndex) {\r\n    let currentColor = colors.unsorted;\r\n    columns[columnIndex].style.height = array[columnIndex] + \"px\";\r\n    columns[columnIndex].style.backgroundColor = currentColor;\r\n    if (columnWidth > 40) columns[columnIndex].innerText = array[columnIndex];\r\n  };\r\n\r\n  this.createVisual = function (array) {\r\n    defineColumnWidth(array.length);\r\n    columnContainer.innerHTML = \"\";\r\n    for (let i = 0; i < array.length; i++) {\r\n      let column = createColumnFromValue(array[i]);\r\n      columnContainer.appendChild(column);\r\n    }\r\n  };\r\n\r\n  let createColumnFromValue = function (value) {\r\n    let column = document.createElement(\"div\");\r\n    column.style.height = value + \"px\";\r\n    column.style.width = columnWidth + \"px\";\r\n    column.style.backgroundColor = colors.unsorted;\r\n    column.style.marginLeft = \"3px\";\r\n    column.style.borderRadius = columnWidth / 3 + \"px\";\r\n    column.style.display = \"flex\";\r\n    column.style.justifyContent = \"center\";\r\n    column.style.alignItems = \"center\";\r\n    if (columnWidth > 40) column.innerText = value;\r\n    return column;\r\n  };\r\n}\r\n","import \"regenerator-runtime/runtime\";\r\nimport { SortManager } from \"./model/core/SortManager\";\r\nimport { sortEvent } from \"./model/core/constants/sortEvent\";\r\nimport { Visualizer, colors } from \"./view/Visualizer\";\r\nimport { sortingState } from \"./model/core/constants/sortingState\";\r\n\r\nlet vis = new Visualizer();\r\nlet currentSize = vis.slider.value;\r\nlet sort = new SortManager(currentSize, \"Bubble\");\r\nvis.createVisual(sort.getArray());\r\n\r\nsort.addEventListener(sortEvent.ItemSwapped, (params) => {\r\n  vis.updateVisual(\r\n    sort.getArray(),\r\n    { indexOne: params.indexOne, indexTwo: params.indexTwo },\r\n    colors.swapped\r\n  );\r\n  vis.increaseSwapCounter();\r\n});\r\n\r\nsort.addEventListener(sortEvent.ItemScanned, (params) => {\r\n  vis.updateVisual(\r\n    sort.getArray(),\r\n    { indexOne: params.indexOne, indexTwo: params.indexTwo },\r\n    colors.scanned\r\n  );\r\n  vis.updateComparisons();\r\n});\r\n\r\nsort.addEventListener(sortEvent.SortingFinished, (params) => {\r\n  vis.updateVisual(sort.getArray(), { indexOne: -1, indexTwo: -1 });\r\n  vis.timer.stop();\r\n});\r\n\r\nvis.slider.addEventListener(\"input\", (e) => {\r\n  newArray();\r\n});\r\n\r\nvis.newArrayButton.addEventListener(\"click\", (e) => {\r\n  newArray();\r\n});\r\n\r\nvis.sortButton.addEventListener(\"click\", (e) => {\r\n  if (sort.state == sortingState.stopped) {\r\n    vis.timer.start();\r\n    sort.applySort();\r\n  }\r\n});\r\n\r\nvis.sortList.addEventListener(\"click\", (e) => {\r\n  for (let child of vis.sortList.children) {\r\n    child.className = \"foldMenu__item\";\r\n  }\r\n  e.target.className = \"foldMenu__item active\";\r\n  sort.setCurrentSort(e.target.id);\r\n  newArray();\r\n});\r\n\r\nfunction newArray() {\r\n  vis.timer.stop();\r\n  vis.resetStats();\r\n  sort.stopSorting();\r\n  currentSize = vis.slider.value;\r\n  sort.remakeArray(currentSize);\r\n  vis.createVisual(sort.getArray());\r\n}\r\n"]}